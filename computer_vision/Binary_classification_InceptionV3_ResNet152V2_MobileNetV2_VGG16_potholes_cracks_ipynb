{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "96b2de4c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "import tensorflow as tf\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import GlobalAveragePooling2D, Dense, Dropout\n",
    "from tensorflow.keras.metrics import Precision, Recall, BinaryAccuracy\n",
    "from keras.applications import ResNet152V2, MobileNetV2, InceptionV3, VGG16\n",
    "from tensorflow.keras.models import load_model\n",
    "import cv2\n",
    "import seaborn as sns\n",
    "from sklearn.metrics import confusion_matrix\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "033a55f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Functions\n",
    "def loss_acc_fig(history):\n",
    "    fig = plt.figure(figsize = [20,7])\n",
    "    fig.add_subplot(1,2,1); plt.plot(history.history['loss'], color='#2F70AF', label='loss'); plt.plot(history.history['val_loss'], color='#e77d01', label='val_loss'); plt.legend(loc=\"upper left\"); plt.title('Loss', fontsize=20);\n",
    "    fig.add_subplot(1,2,2); plt.plot(history.history['accuracy'], color='#724C9D', label='accuracy'); plt.plot(history.history['val_accuracy'], color='#FB7488', label='val_accuracy'); plt.legend(loc=\"upper left\"); plt.title('Accuracy', fontsize=20);\n",
    "    plt.show()\n",
    "    \n",
    "def ppv_tpr_acc_test(model):\n",
    "    ppv = Precision()\n",
    "    tpr = Recall()\n",
    "    acc = BinaryAccuracy()\n",
    "    for batch in test.as_numpy_iterator(): \n",
    "        x, y = batch\n",
    "        yhat = model.predict(x)\n",
    "        ppv.update_state(y, yhat)\n",
    "        tpr.update_state(y, yhat)\n",
    "        acc.update_state(y, yhat)\n",
    "    print(ppv.result(), tpr.result(), acc.result())\n",
    "\n",
    "\n",
    "def confusion_mat(model):\n",
    "    df_comb = pd.DataFrame()\n",
    "    for batch in test.as_numpy_iterator(): \n",
    "        x,y = batch\n",
    "        yhat = model.predict(x)\n",
    "        df = pd.DataFrame({'y': y.flatten(), 'yhat': yhat.flatten()})\n",
    "        df_comb = pd.concat([df_comb, df])\n",
    "    y_pred = [1 if x > 0.5 else 0 for x in df_comb.yhat]\n",
    "    cf = confusion_matrix(df_comb.y, y_pred)\n",
    "    print(cf)\n",
    "    ax= plt.subplot()\n",
    "    sns.heatmap(cf, annot=True, ax = ax);\n",
    "    ax.set_xlabel('Predicted labels')\n",
    "    ax.set_ylabel('True labels');\n",
    "    ax.set_title('Confusion Matrix');\n",
    "    ax.xaxis.set_ticklabels(['Crack', 'Potholes'])\n",
    "    ax.yaxis.set_ticklabels(['Crack', 'Potholes'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "071f3a3c",
   "metadata": {},
   "source": [
    "### Prevent OOM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8052f82d",
   "metadata": {},
   "outputs": [],
   "source": [
    "gpus = tf.config.experimental.list_physical_devices('GPU')\n",
    "for gpu in gpus: \n",
    "    tf.config.experimental.set_memory_growth(gpu, True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "95ab1289",
   "metadata": {},
   "outputs": [],
   "source": [
    "os.listdir()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d3090ec",
   "metadata": {},
   "source": [
    "### Data loading"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a7ad07b7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 1946 files belonging to 2 classes.\n",
      "Found 365 files belonging to 2 classes.\n",
      "Found 122 files belonging to 2 classes.\n"
     ]
    }
   ],
   "source": [
    "train = tf.keras.utils.image_dataset_from_directory('road_images/split/train', batch_size=64, image_size=(224, 224)) \n",
    "train_iterator = train.as_numpy_iterator()\n",
    "train_batch = train_iterator.next() \n",
    "\n",
    "dev = tf.keras.utils.image_dataset_from_directory('road_images/split/dev', batch_size=64, image_size=(224, 224)) \n",
    "dev_iterator = dev.as_numpy_iterator()\n",
    "dev_batch = dev_iterator.next() \n",
    "\n",
    "test = tf.keras.utils.image_dataset_from_directory('road_images/split/test', batch_size=64, image_size=(224, 224)) \n",
    "test_iterator = test.as_numpy_iterator()\n",
    "test_batch = test_iterator.next() "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "99cfe9b0",
   "metadata": {},
   "source": [
    "### Data scaling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5c7f1089",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([[[[0.61736983, 0.6212914 , 0.64089924],\n",
       "          [0.48199558, 0.48591715, 0.505525  ],\n",
       "          [0.6972766 , 0.69816065, 0.7268809 ],\n",
       "          ...,\n",
       "          [0.8806952 , 0.8924599 , 0.92775404],\n",
       "          [0.82153374, 0.83329844, 0.86859256],\n",
       "          [0.7773317 , 0.7890964 , 0.82439053]],\n",
       " \n",
       "         [[0.45785508, 0.46177664, 0.4813845 ],\n",
       "          [0.5860207 , 0.5899423 , 0.6095501 ],\n",
       "          [0.73800147, 0.73888564, 0.76760584],\n",
       "          ...,\n",
       "          [0.85024023, 0.86200494, 0.89729905],\n",
       "          [0.7356151 , 0.7473798 , 0.7826739 ],\n",
       "          [0.7930753 , 0.80484   , 0.84013414]],\n",
       " \n",
       "         [[0.7747076 , 0.7786292 , 0.798237  ],\n",
       "          [0.26072842, 0.26465   , 0.28425783],\n",
       "          [0.7814321 , 0.7823162 , 0.8110364 ],\n",
       "          ...,\n",
       "          [0.8775507 , 0.8893154 , 0.92460954],\n",
       "          [0.6210416 , 0.6328063 , 0.6681004 ],\n",
       "          [0.82393086, 0.83569556, 0.8709897 ]],\n",
       " \n",
       "         ...,\n",
       " \n",
       "         [[0.31131172, 0.29562545, 0.28386074],\n",
       "          [0.31742227, 0.301736  , 0.2899713 ],\n",
       "          [0.3091934 , 0.29489034, 0.28312564],\n",
       "          ...,\n",
       "          [0.33176613, 0.32000142, 0.29255044],\n",
       "          [0.6176349 , 0.6058702 , 0.5784192 ],\n",
       "          [0.38457948, 0.37281477, 0.34417322]],\n",
       " \n",
       "         [[0.31457716, 0.2988909 , 0.28712618],\n",
       "          [0.4243772 , 0.40869093, 0.39692622],\n",
       "          [0.61969274, 0.60864383, 0.5968791 ],\n",
       "          ...,\n",
       "          [0.37197408, 0.36020938, 0.3327584 ],\n",
       "          [0.28101566, 0.26744977, 0.23639645],\n",
       "          [0.26009405, 0.2464035 , 0.21110938]],\n",
       " \n",
       "         [[0.24290197, 0.22721569, 0.21545099],\n",
       "          [0.41167015, 0.39598387, 0.38421917],\n",
       "          [0.2816422 , 0.26595592, 0.25419122],\n",
       "          ...,\n",
       "          [0.30922073, 0.29745603, 0.27000505],\n",
       "          [0.30491537, 0.28948292, 0.2546965 ],\n",
       "          [0.65291995, 0.6372337 , 0.5977382 ]]],\n",
       " \n",
       " \n",
       "        [[[0.18029712, 0.20382653, 0.14892457],\n",
       "          [0.2309724 , 0.2545018 , 0.19959985],\n",
       "          [0.1819978 , 0.20552722, 0.15062526],\n",
       "          ...,\n",
       "          [0.3716009 , 0.37062094, 0.3018784 ],\n",
       "          [0.32877883, 0.33143985, 0.2699553 ],\n",
       "          [0.17583254, 0.18474586, 0.12013514]],\n",
       " \n",
       "         [[0.20865847, 0.23218788, 0.17728591],\n",
       "          [0.23090236, 0.25443175, 0.19952981],\n",
       "          [0.18587434, 0.20940375, 0.1545018 ],\n",
       "          ...,\n",
       "          [0.35713258, 0.31882247, 0.29060596],\n",
       "          [0.28821048, 0.24003124, 0.22308445],\n",
       "          [0.32081845, 0.26087448, 0.2503703 ]],\n",
       " \n",
       "         [[0.17738095, 0.20091036, 0.1460084 ],\n",
       "          [0.17882654, 0.20235595, 0.147454  ],\n",
       "          [0.18216786, 0.20569727, 0.15079531],\n",
       "          ...,\n",
       "          [0.4673477 , 0.40685374, 0.32687134],\n",
       "          [0.6423685 , 0.55651456, 0.50219774],\n",
       "          [0.74163806, 0.64149797, 0.601442  ]],\n",
       " \n",
       "         ...,\n",
       " \n",
       "         [[0.38495186, 0.37318715, 0.31436363],\n",
       "          [0.43770757, 0.42594287, 0.36711934],\n",
       "          [0.42892966, 0.41716495, 0.35834143],\n",
       "          ...,\n",
       "          [0.48237303, 0.45492205, 0.39217693],\n",
       "          [0.4554252 , 0.42797422, 0.36522913],\n",
       "          [0.47307378, 0.4456228 , 0.3828777 ]],\n",
       " \n",
       "         [[0.37821174, 0.36644703, 0.3076235 ],\n",
       "          [0.39273286, 0.38096815, 0.32214463],\n",
       "          [0.4112758 , 0.3995111 , 0.34068757],\n",
       "          ...,\n",
       "          [0.47160512, 0.44415414, 0.38140905],\n",
       "          [0.46924624, 0.44179526, 0.37905017],\n",
       "          [0.4827625 , 0.4553115 , 0.39256638]],\n",
       " \n",
       "         [[0.38920796, 0.37744325, 0.31861973],\n",
       "          [0.51092565, 0.49916092, 0.4403374 ],\n",
       "          [0.34431332, 0.33254862, 0.2737251 ],\n",
       "          ...,\n",
       "          [0.4970049 , 0.46955392, 0.40680882],\n",
       "          [0.43640938, 0.4089584 , 0.3462133 ],\n",
       "          [0.4744197 , 0.44696873, 0.38422364]]],\n",
       " \n",
       " \n",
       "        [[[0.7856705 , 0.821226  , 0.8792655 ],\n",
       "          [0.7749625 , 0.80633503, 0.85591483],\n",
       "          [0.7300658 , 0.75451684, 0.80015254],\n",
       "          ...,\n",
       "          [0.46879134, 0.43482777, 0.406664  ],\n",
       "          [0.45006394, 0.41610035, 0.38130406],\n",
       "          [0.4422106 , 0.40824705, 0.37228766]],\n",
       " \n",
       "         [[0.75301373, 0.79106015, 0.8400585 ],\n",
       "          [0.74314225, 0.7748712 , 0.8204595 ],\n",
       "          [0.6815814 , 0.7092437 , 0.7484569 ],\n",
       "          ...,\n",
       "          [0.43095368, 0.4094901 , 0.3758417 ],\n",
       "          [0.4269545 , 0.40549093, 0.36427942],\n",
       "          [0.43368348, 0.41221988, 0.36901262]],\n",
       " \n",
       "         [[0.7588848 , 0.7981005 , 0.8367322 ],\n",
       "          [0.7958696 , 0.83067477, 0.8657588 ],\n",
       "          [0.70827955, 0.72638804, 0.76201856],\n",
       "          ...,\n",
       "          [0.4164978 , 0.4138793 , 0.36856368],\n",
       "          [0.41736332, 0.41379425, 0.36733067],\n",
       "          [0.415101  , 0.4121261 , 0.35972136]],\n",
       " \n",
       "         ...,\n",
       " \n",
       "         [[0.906444  , 0.8711499 , 0.85154206],\n",
       "          [0.77201647, 0.73672235, 0.7171145 ],\n",
       "          [0.7207495 , 0.6854554 , 0.66584754],\n",
       "          ...,\n",
       "          [0.38537374, 0.3775306 , 0.42066786],\n",
       "          [0.24895032, 0.24110718, 0.28424442],\n",
       "          [0.40040547, 0.39256233, 0.43569958]],\n",
       " \n",
       "         [[0.9470547 , 0.91176057, 0.8921527 ],\n",
       "          [0.82048666, 0.78519255, 0.7655847 ],\n",
       "          [0.7401267 , 0.7048326 , 0.6852248 ],\n",
       "          ...,\n",
       "          [0.39346123, 0.3856181 , 0.42875534],\n",
       "          [0.32570383, 0.3178607 , 0.36099795],\n",
       "          [0.3487461 , 0.34090295, 0.3840402 ]],\n",
       " \n",
       "         [[0.98873293, 0.9554158 , 0.93580794],\n",
       "          [0.88051707, 0.84522295, 0.8256151 ],\n",
       "          [0.7921817 , 0.75688756, 0.7372797 ],\n",
       "          ...,\n",
       "          [0.37290508, 0.36506194, 0.4081992 ],\n",
       "          [0.44882748, 0.44098434, 0.4841216 ],\n",
       "          [0.41709885, 0.4092557 , 0.45239297]]],\n",
       " \n",
       " \n",
       "        ...,\n",
       " \n",
       " \n",
       "        [[[0.3344538 , 0.3579832 , 0.24817927],\n",
       "          [0.33791515, 0.36536613, 0.24379753],\n",
       "          [0.3294718 , 0.35692278, 0.227511  ],\n",
       "          ...,\n",
       "          [0.2933177 , 0.2933177 , 0.25410202],\n",
       "          [0.27863044, 0.27470887, 0.25510103],\n",
       "          [0.2039414 , 0.20001984, 0.1921767 ]],\n",
       " \n",
       "         [[0.307463  , 0.3309924 , 0.22118847],\n",
       "          [0.33053222, 0.3579832 , 0.23641455],\n",
       "          [0.31394556, 0.34139657, 0.2119848 ],\n",
       "          ...,\n",
       "          [0.30230027, 0.29921904, 0.2770902 ],\n",
       "          [0.254662  , 0.2538217 , 0.22497015],\n",
       "          [0.22276866, 0.22192834, 0.1930768 ]],\n",
       " \n",
       "         [[0.32659063, 0.35012004, 0.24031612],\n",
       "          [0.3337335 , 0.36118448, 0.23961584],\n",
       "          [0.3252101 , 0.35266107, 0.2232493 ],\n",
       "          ...,\n",
       "          [0.24433729, 0.24041572, 0.22472943],\n",
       "          [0.2788916 , 0.2788916 , 0.24751903],\n",
       "          [0.26420406, 0.26420406, 0.21714523]],\n",
       " \n",
       "         ...,\n",
       " \n",
       "         [[0.33337286, 0.33729443, 0.30592188],\n",
       "          [0.34772044, 0.35556358, 0.31242633],\n",
       "          [0.33989695, 0.34774008, 0.2967597 ],\n",
       "          ...,\n",
       "          [0.9752503 , 0.99747914, 0.99747914],\n",
       "          [0.9805124 , 0.99619865, 0.9922771 ],\n",
       "          [0.92683077, 0.9598845 , 0.96772766]],\n",
       " \n",
       "         [[0.31736675, 0.32128832, 0.28991577],\n",
       "          [0.37162834, 0.37947148, 0.33633423],\n",
       "          [0.36014435, 0.36798748, 0.3170071 ],\n",
       "          ...,\n",
       "          [0.9704879 , 0.9940173 , 0.9940173 ],\n",
       "          [0.9440581 , 0.9597444 , 0.9558228 ],\n",
       "          [0.931752  , 0.96480584, 0.972649  ]],\n",
       " \n",
       "         [[0.32707077, 0.33099234, 0.2996198 ],\n",
       "          [0.40644255, 0.4142857 , 0.37114844],\n",
       "          [0.34599963, 0.35384277, 0.30286238],\n",
       "          ...,\n",
       "          [0.9646258 , 0.9881552 , 0.9881552 ],\n",
       "          [0.8999201 , 0.9156064 , 0.9116848 ],\n",
       "          [0.93247044, 0.96552426, 0.97314715]]],\n",
       " \n",
       " \n",
       "        [[[0.6857743 , 0.6387155 , 0.5759704 ],\n",
       "          [0.7187625 , 0.6717037 , 0.6089586 ],\n",
       "          [0.72285414, 0.6757953 , 0.6130502 ],\n",
       "          ...,\n",
       "          [0.59236294, 0.5317189 , 0.4252755 ],\n",
       "          [0.7712584 , 0.7241996 , 0.63008195],\n",
       "          [0.6850402 , 0.6524067 , 0.570384  ]],\n",
       " \n",
       "         [[0.7039966 , 0.6569378 , 0.5941927 ],\n",
       "          [0.7309224 , 0.6838636 , 0.6211185 ],\n",
       "          [0.70642257, 0.65936375, 0.59661865],\n",
       "          ...,\n",
       "          [0.6934086 , 0.6356552 , 0.5330191 ],\n",
       "          [0.639003  , 0.59194416, 0.4978265 ],\n",
       "          [0.5796165 , 0.546983  , 0.46420977]],\n",
       " \n",
       "         [[0.6969738 , 0.649915  , 0.5871699 ],\n",
       "          [0.7053022 , 0.65824336, 0.59549826],\n",
       "          [0.68334335, 0.63628453, 0.5735394 ],\n",
       "          ...,\n",
       "          [0.73255336, 0.68354356, 0.58747494],\n",
       "          [0.59420204, 0.5471432 , 0.45302555],\n",
       "          [0.6967943 , 0.653657  , 0.5673825 ]],\n",
       " \n",
       "         ...,\n",
       " \n",
       "         [[0.19426261, 0.22563516, 0.23739986],\n",
       "          [0.1728688 , 0.20424135, 0.21600606],\n",
       "          [0.18613078, 0.21750332, 0.22926803],\n",
       "          ...,\n",
       "          [0.6379705 , 0.5909117 , 0.5281666 ],\n",
       "          [0.5714973 , 0.5244385 , 0.46169335],\n",
       "          [0.5659283 , 0.51886946, 0.4561243 ]],\n",
       " \n",
       "         [[0.19635339, 0.22772594, 0.23949064],\n",
       "          [0.1651111 , 0.19648364, 0.20824835],\n",
       "          [0.15860356, 0.18997611, 0.20174082],\n",
       "          ...,\n",
       "          [0.5578524 , 0.51079357, 0.4480485 ],\n",
       "          [0.60631174, 0.5592529 , 0.49650782],\n",
       "          [0.6225951 , 0.57553625, 0.51279116]],\n",
       " \n",
       "         [[0.16073929, 0.19211183, 0.20387654],\n",
       "          [0.20755751, 0.23893006, 0.25069478],\n",
       "          [0.16512619, 0.19649874, 0.20826344],\n",
       "          ...,\n",
       "          [0.5721349 , 0.5250761 , 0.46233103],\n",
       "          [0.6280901 , 0.5810312 , 0.5182861 ],\n",
       "          [0.6103199 , 0.5632611 , 0.500516  ]]],\n",
       " \n",
       " \n",
       "        [[[0.379972  , 0.34551823, 0.3168067 ],\n",
       "          [0.3857743 , 0.35832334, 0.3269508 ],\n",
       "          [0.39587334, 0.3762655 , 0.3527361 ],\n",
       "          ...,\n",
       "          [0.44843403, 0.4405909 , 0.39171153],\n",
       "          [0.4596869 , 0.45184377, 0.39302024],\n",
       "          [0.45322612, 0.4492595 , 0.37880638]],\n",
       " \n",
       "         [[0.45852342, 0.4232293 , 0.38793516],\n",
       "          [0.56497097, 0.53138757, 0.5030812 ],\n",
       "          [0.4186375 , 0.39403763, 0.3668668 ],\n",
       "          ...,\n",
       "          [0.43686664, 0.4290235 , 0.38014415],\n",
       "          [0.4333691 , 0.42552596, 0.37454554],\n",
       "          [0.5221373 , 0.51429415, 0.4554706 ]],\n",
       " \n",
       "         [[0.33768004, 0.29846436, 0.25924867],\n",
       "          [0.35804817, 0.32065323, 0.28325823],\n",
       "          [0.3746148 , 0.34127143, 0.3108943 ],\n",
       "          ...,\n",
       "          [0.41264468, 0.40480155, 0.35577196],\n",
       "          [0.3781353 , 0.37029216, 0.3214126 ],\n",
       "          [0.41072786, 0.40288472, 0.35400516]],\n",
       " \n",
       "         ...,\n",
       " \n",
       "         [[0.5708588 , 0.5787019 , 0.53556466],\n",
       "          [0.54791796, 0.55183953, 0.520467  ],\n",
       "          [0.5368249 , 0.54074645, 0.5135757 ],\n",
       "          ...,\n",
       "          [0.3525639 , 0.36040702, 0.34079918],\n",
       "          [0.2988784 , 0.30672154, 0.2871137 ],\n",
       "          [0.3175663 , 0.32540944, 0.3058016 ]],\n",
       " \n",
       "         [[0.5247105 , 0.5325536 , 0.4894164 ],\n",
       "          [0.5302832 , 0.5342048 , 0.50283223],\n",
       "          [0.53596807, 0.53988963, 0.5127188 ],\n",
       "          ...,\n",
       "          [0.25765303, 0.26549616, 0.24588832],\n",
       "          [0.310754  , 0.31859714, 0.2989893 ],\n",
       "          [0.2702833 , 0.27812645, 0.2585186 ]],\n",
       " \n",
       "         [[0.6219625 , 0.6298056 , 0.5866684 ],\n",
       "          [0.55392677, 0.55784833, 0.5264758 ],\n",
       "          [0.57822484, 0.5821464 , 0.5549755 ],\n",
       "          ...,\n",
       "          [0.27507707, 0.2829202 , 0.26331237],\n",
       "          [0.29514685, 0.30299002, 0.28338215],\n",
       "          [0.2811069 , 0.28895003, 0.26934218]]]], dtype=float32),\n",
       " array([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1,\n",
       "        1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0,\n",
       "        0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1],\n",
       "       dtype=int32))"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train = train.map(lambda x,y: (x/255, y))\n",
    "dev = dev.map(lambda x,y: (x/255, y))\n",
    "test = test.map(lambda x,y: (x/255, y))\n",
    "test.as_numpy_iterator().next()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f26eeeed",
   "metadata": {},
   "source": [
    "### Modeling"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bba0696c",
   "metadata": {},
   "source": [
    "### MobileNetv2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bb455538",
   "metadata": {},
   "outputs": [],
   "source": [
    "mobnet_conv = MobileNetV2(input_shape = (224,224,3), weights = 'imagenet', include_top = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d6c91fb5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"mobilenetv2_1.00_224\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                Output Shape                 Param #   Connected to                  \n",
      "==================================================================================================\n",
      " input_1 (InputLayer)        [(None, 224, 224, 3)]        0         []                            \n",
      "                                                                                                  \n",
      " Conv1 (Conv2D)              (None, 112, 112, 32)         864       ['input_1[0][0]']             \n",
      "                                                                                                  \n",
      " bn_Conv1 (BatchNormalizati  (None, 112, 112, 32)         128       ['Conv1[0][0]']               \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " Conv1_relu (ReLU)           (None, 112, 112, 32)         0         ['bn_Conv1[0][0]']            \n",
      "                                                                                                  \n",
      " expanded_conv_depthwise (D  (None, 112, 112, 32)         288       ['Conv1_relu[0][0]']          \n",
      " epthwiseConv2D)                                                                                  \n",
      "                                                                                                  \n",
      " expanded_conv_depthwise_BN  (None, 112, 112, 32)         128       ['expanded_conv_depthwise[0][0\n",
      "  (BatchNormalization)                                              ]']                           \n",
      "                                                                                                  \n",
      " expanded_conv_depthwise_re  (None, 112, 112, 32)         0         ['expanded_conv_depthwise_BN[0\n",
      " lu (ReLU)                                                          ][0]']                        \n",
      "                                                                                                  \n",
      " expanded_conv_project (Con  (None, 112, 112, 16)         512       ['expanded_conv_depthwise_relu\n",
      " v2D)                                                               [0][0]']                      \n",
      "                                                                                                  \n",
      " expanded_conv_project_BN (  (None, 112, 112, 16)         64        ['expanded_conv_project[0][0]'\n",
      " BatchNormalization)                                                ]                             \n",
      "                                                                                                  \n",
      " block_1_expand (Conv2D)     (None, 112, 112, 96)         1536      ['expanded_conv_project_BN[0][\n",
      "                                                                    0]']                          \n",
      "                                                                                                  \n",
      " block_1_expand_BN (BatchNo  (None, 112, 112, 96)         384       ['block_1_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_1_expand_relu (ReLU)  (None, 112, 112, 96)         0         ['block_1_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_1_pad (ZeroPadding2D  (None, 113, 113, 96)         0         ['block_1_expand_relu[0][0]'] \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_1_depthwise (Depthwi  (None, 56, 56, 96)           864       ['block_1_pad[0][0]']         \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_1_depthwise_BN (Batc  (None, 56, 56, 96)           384       ['block_1_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_1_depthwise_relu (Re  (None, 56, 56, 96)           0         ['block_1_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_1_project (Conv2D)    (None, 56, 56, 24)           2304      ['block_1_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_1_project_BN (BatchN  (None, 56, 56, 24)           96        ['block_1_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_2_expand (Conv2D)     (None, 56, 56, 144)          3456      ['block_1_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_2_expand_BN (BatchNo  (None, 56, 56, 144)          576       ['block_2_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_2_expand_relu (ReLU)  (None, 56, 56, 144)          0         ['block_2_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_2_depthwise (Depthwi  (None, 56, 56, 144)          1296      ['block_2_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_2_depthwise_BN (Batc  (None, 56, 56, 144)          576       ['block_2_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_2_depthwise_relu (Re  (None, 56, 56, 144)          0         ['block_2_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_2_project (Conv2D)    (None, 56, 56, 24)           3456      ['block_2_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_2_project_BN (BatchN  (None, 56, 56, 24)           96        ['block_2_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_2_add (Add)           (None, 56, 56, 24)           0         ['block_1_project_BN[0][0]',  \n",
      "                                                                     'block_2_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_3_expand (Conv2D)     (None, 56, 56, 144)          3456      ['block_2_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_3_expand_BN (BatchNo  (None, 56, 56, 144)          576       ['block_3_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " block_3_expand_relu (ReLU)  (None, 56, 56, 144)          0         ['block_3_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_3_pad (ZeroPadding2D  (None, 57, 57, 144)          0         ['block_3_expand_relu[0][0]'] \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_3_depthwise (Depthwi  (None, 28, 28, 144)          1296      ['block_3_pad[0][0]']         \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_3_depthwise_BN (Batc  (None, 28, 28, 144)          576       ['block_3_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_3_depthwise_relu (Re  (None, 28, 28, 144)          0         ['block_3_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_3_project (Conv2D)    (None, 28, 28, 32)           4608      ['block_3_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_3_project_BN (BatchN  (None, 28, 28, 32)           128       ['block_3_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_4_expand (Conv2D)     (None, 28, 28, 192)          6144      ['block_3_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_4_expand_BN (BatchNo  (None, 28, 28, 192)          768       ['block_4_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_4_expand_relu (ReLU)  (None, 28, 28, 192)          0         ['block_4_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_4_depthwise (Depthwi  (None, 28, 28, 192)          1728      ['block_4_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_4_depthwise_BN (Batc  (None, 28, 28, 192)          768       ['block_4_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_4_depthwise_relu (Re  (None, 28, 28, 192)          0         ['block_4_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_4_project (Conv2D)    (None, 28, 28, 32)           6144      ['block_4_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_4_project_BN (BatchN  (None, 28, 28, 32)           128       ['block_4_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_4_add (Add)           (None, 28, 28, 32)           0         ['block_3_project_BN[0][0]',  \n",
      "                                                                     'block_4_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_5_expand (Conv2D)     (None, 28, 28, 192)          6144      ['block_4_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_5_expand_BN (BatchNo  (None, 28, 28, 192)          768       ['block_5_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_5_expand_relu (ReLU)  (None, 28, 28, 192)          0         ['block_5_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_5_depthwise (Depthwi  (None, 28, 28, 192)          1728      ['block_5_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_5_depthwise_BN (Batc  (None, 28, 28, 192)          768       ['block_5_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_5_depthwise_relu (Re  (None, 28, 28, 192)          0         ['block_5_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_5_project (Conv2D)    (None, 28, 28, 32)           6144      ['block_5_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_5_project_BN (BatchN  (None, 28, 28, 32)           128       ['block_5_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_5_add (Add)           (None, 28, 28, 32)           0         ['block_4_add[0][0]',         \n",
      "                                                                     'block_5_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_6_expand (Conv2D)     (None, 28, 28, 192)          6144      ['block_5_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_6_expand_BN (BatchNo  (None, 28, 28, 192)          768       ['block_6_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_6_expand_relu (ReLU)  (None, 28, 28, 192)          0         ['block_6_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_6_pad (ZeroPadding2D  (None, 29, 29, 192)          0         ['block_6_expand_relu[0][0]'] \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_6_depthwise (Depthwi  (None, 14, 14, 192)          1728      ['block_6_pad[0][0]']         \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " block_6_depthwise_BN (Batc  (None, 14, 14, 192)          768       ['block_6_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_6_depthwise_relu (Re  (None, 14, 14, 192)          0         ['block_6_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_6_project (Conv2D)    (None, 14, 14, 64)           12288     ['block_6_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_6_project_BN (BatchN  (None, 14, 14, 64)           256       ['block_6_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_7_expand (Conv2D)     (None, 14, 14, 384)          24576     ['block_6_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_7_expand_BN (BatchNo  (None, 14, 14, 384)          1536      ['block_7_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_7_expand_relu (ReLU)  (None, 14, 14, 384)          0         ['block_7_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_7_depthwise (Depthwi  (None, 14, 14, 384)          3456      ['block_7_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_7_depthwise_BN (Batc  (None, 14, 14, 384)          1536      ['block_7_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_7_depthwise_relu (Re  (None, 14, 14, 384)          0         ['block_7_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_7_project (Conv2D)    (None, 14, 14, 64)           24576     ['block_7_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_7_project_BN (BatchN  (None, 14, 14, 64)           256       ['block_7_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_7_add (Add)           (None, 14, 14, 64)           0         ['block_6_project_BN[0][0]',  \n",
      "                                                                     'block_7_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_8_expand (Conv2D)     (None, 14, 14, 384)          24576     ['block_7_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_8_expand_BN (BatchNo  (None, 14, 14, 384)          1536      ['block_8_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_8_expand_relu (ReLU)  (None, 14, 14, 384)          0         ['block_8_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_8_depthwise (Depthwi  (None, 14, 14, 384)          3456      ['block_8_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_8_depthwise_BN (Batc  (None, 14, 14, 384)          1536      ['block_8_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_8_depthwise_relu (Re  (None, 14, 14, 384)          0         ['block_8_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_8_project (Conv2D)    (None, 14, 14, 64)           24576     ['block_8_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_8_project_BN (BatchN  (None, 14, 14, 64)           256       ['block_8_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_8_add (Add)           (None, 14, 14, 64)           0         ['block_7_add[0][0]',         \n",
      "                                                                     'block_8_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_9_expand (Conv2D)     (None, 14, 14, 384)          24576     ['block_8_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_9_expand_BN (BatchNo  (None, 14, 14, 384)          1536      ['block_9_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_9_expand_relu (ReLU)  (None, 14, 14, 384)          0         ['block_9_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_9_depthwise (Depthwi  (None, 14, 14, 384)          3456      ['block_9_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_9_depthwise_BN (Batc  (None, 14, 14, 384)          1536      ['block_9_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_9_depthwise_relu (Re  (None, 14, 14, 384)          0         ['block_9_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_9_project (Conv2D)    (None, 14, 14, 64)           24576     ['block_9_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_9_project_BN (BatchN  (None, 14, 14, 64)           256       ['block_9_project[0][0]']     \n",
      " ormalization)                                                                                    \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " block_9_add (Add)           (None, 14, 14, 64)           0         ['block_8_add[0][0]',         \n",
      "                                                                     'block_9_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_10_expand (Conv2D)    (None, 14, 14, 384)          24576     ['block_9_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_10_expand_BN (BatchN  (None, 14, 14, 384)          1536      ['block_10_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_10_expand_relu (ReLU  (None, 14, 14, 384)          0         ['block_10_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_10_depthwise (Depthw  (None, 14, 14, 384)          3456      ['block_10_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_10_depthwise_BN (Bat  (None, 14, 14, 384)          1536      ['block_10_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_10_depthwise_relu (R  (None, 14, 14, 384)          0         ['block_10_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_10_project (Conv2D)   (None, 14, 14, 96)           36864     ['block_10_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_10_project_BN (Batch  (None, 14, 14, 96)           384       ['block_10_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_11_expand (Conv2D)    (None, 14, 14, 576)          55296     ['block_10_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_11_expand_BN (BatchN  (None, 14, 14, 576)          2304      ['block_11_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_11_expand_relu (ReLU  (None, 14, 14, 576)          0         ['block_11_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_11_depthwise (Depthw  (None, 14, 14, 576)          5184      ['block_11_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_11_depthwise_BN (Bat  (None, 14, 14, 576)          2304      ['block_11_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_11_depthwise_relu (R  (None, 14, 14, 576)          0         ['block_11_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_11_project (Conv2D)   (None, 14, 14, 96)           55296     ['block_11_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_11_project_BN (Batch  (None, 14, 14, 96)           384       ['block_11_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_11_add (Add)          (None, 14, 14, 96)           0         ['block_10_project_BN[0][0]', \n",
      "                                                                     'block_11_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_12_expand (Conv2D)    (None, 14, 14, 576)          55296     ['block_11_add[0][0]']        \n",
      "                                                                                                  \n",
      " block_12_expand_BN (BatchN  (None, 14, 14, 576)          2304      ['block_12_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_12_expand_relu (ReLU  (None, 14, 14, 576)          0         ['block_12_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_12_depthwise (Depthw  (None, 14, 14, 576)          5184      ['block_12_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_12_depthwise_BN (Bat  (None, 14, 14, 576)          2304      ['block_12_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_12_depthwise_relu (R  (None, 14, 14, 576)          0         ['block_12_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_12_project (Conv2D)   (None, 14, 14, 96)           55296     ['block_12_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_12_project_BN (Batch  (None, 14, 14, 96)           384       ['block_12_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_12_add (Add)          (None, 14, 14, 96)           0         ['block_11_add[0][0]',        \n",
      "                                                                     'block_12_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_13_expand (Conv2D)    (None, 14, 14, 576)          55296     ['block_12_add[0][0]']        \n",
      "                                                                                                  \n",
      " block_13_expand_BN (BatchN  (None, 14, 14, 576)          2304      ['block_13_expand[0][0]']     \n",
      " ormalization)                                                                                    \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " block_13_expand_relu (ReLU  (None, 14, 14, 576)          0         ['block_13_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_13_pad (ZeroPadding2  (None, 15, 15, 576)          0         ['block_13_expand_relu[0][0]']\n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " block_13_depthwise (Depthw  (None, 7, 7, 576)            5184      ['block_13_pad[0][0]']        \n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_13_depthwise_BN (Bat  (None, 7, 7, 576)            2304      ['block_13_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_13_depthwise_relu (R  (None, 7, 7, 576)            0         ['block_13_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_13_project (Conv2D)   (None, 7, 7, 160)            92160     ['block_13_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_13_project_BN (Batch  (None, 7, 7, 160)            640       ['block_13_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_14_expand (Conv2D)    (None, 7, 7, 960)            153600    ['block_13_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_14_expand_BN (BatchN  (None, 7, 7, 960)            3840      ['block_14_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_14_expand_relu (ReLU  (None, 7, 7, 960)            0         ['block_14_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_14_depthwise (Depthw  (None, 7, 7, 960)            8640      ['block_14_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_14_depthwise_BN (Bat  (None, 7, 7, 960)            3840      ['block_14_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_14_depthwise_relu (R  (None, 7, 7, 960)            0         ['block_14_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_14_project (Conv2D)   (None, 7, 7, 160)            153600    ['block_14_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_14_project_BN (Batch  (None, 7, 7, 160)            640       ['block_14_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_14_add (Add)          (None, 7, 7, 160)            0         ['block_13_project_BN[0][0]', \n",
      "                                                                     'block_14_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_15_expand (Conv2D)    (None, 7, 7, 960)            153600    ['block_14_add[0][0]']        \n",
      "                                                                                                  \n",
      " block_15_expand_BN (BatchN  (None, 7, 7, 960)            3840      ['block_15_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_15_expand_relu (ReLU  (None, 7, 7, 960)            0         ['block_15_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_15_depthwise (Depthw  (None, 7, 7, 960)            8640      ['block_15_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_15_depthwise_BN (Bat  (None, 7, 7, 960)            3840      ['block_15_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_15_depthwise_relu (R  (None, 7, 7, 960)            0         ['block_15_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_15_project (Conv2D)   (None, 7, 7, 160)            153600    ['block_15_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_15_project_BN (Batch  (None, 7, 7, 160)            640       ['block_15_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_15_add (Add)          (None, 7, 7, 160)            0         ['block_14_add[0][0]',        \n",
      "                                                                     'block_15_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_16_expand (Conv2D)    (None, 7, 7, 960)            153600    ['block_15_add[0][0]']        \n",
      "                                                                                                  \n",
      " block_16_expand_BN (BatchN  (None, 7, 7, 960)            3840      ['block_16_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_16_expand_relu (ReLU  (None, 7, 7, 960)            0         ['block_16_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_16_depthwise (Depthw  (None, 7, 7, 960)            8640      ['block_16_expand_relu[0][0]']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_16_depthwise_BN (Bat  (None, 7, 7, 960)            3840      ['block_16_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_16_depthwise_relu (R  (None, 7, 7, 960)            0         ['block_16_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_16_project (Conv2D)   (None, 7, 7, 320)            307200    ['block_16_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_16_project_BN (Batch  (None, 7, 7, 320)            1280      ['block_16_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " Conv_1 (Conv2D)             (None, 7, 7, 1280)           409600    ['block_16_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " Conv_1_bn (BatchNormalizat  (None, 7, 7, 1280)           5120      ['Conv_1[0][0]']              \n",
      " ion)                                                                                             \n",
      "                                                                                                  \n",
      " out_relu (ReLU)             (None, 7, 7, 1280)           0         ['Conv_1_bn[0][0]']           \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 2257984 (8.61 MB)\n",
      "Trainable params: 2223872 (8.48 MB)\n",
      "Non-trainable params: 34112 (133.25 KB)\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "mobnet_conv.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5b2e1bfc",
   "metadata": {},
   "outputs": [],
   "source": [
    "mobnet_conv.trainable = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9f9915ea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"mobilenetv2_1.00_224\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                Output Shape                 Param #   Connected to                  \n",
      "==================================================================================================\n",
      " input_1 (InputLayer)        [(None, 224, 224, 3)]        0         []                            \n",
      "                                                                                                  \n",
      " Conv1 (Conv2D)              (None, 112, 112, 32)         864       ['input_1[0][0]']             \n",
      "                                                                                                  \n",
      " bn_Conv1 (BatchNormalizati  (None, 112, 112, 32)         128       ['Conv1[0][0]']               \n",
      " on)                                                                                              \n",
      "                                                                                                  \n",
      " Conv1_relu (ReLU)           (None, 112, 112, 32)         0         ['bn_Conv1[0][0]']            \n",
      "                                                                                                  \n",
      " expanded_conv_depthwise (D  (None, 112, 112, 32)         288       ['Conv1_relu[0][0]']          \n",
      " epthwiseConv2D)                                                                                  \n",
      "                                                                                                  \n",
      " expanded_conv_depthwise_BN  (None, 112, 112, 32)         128       ['expanded_conv_depthwise[0][0\n",
      "  (BatchNormalization)                                              ]']                           \n",
      "                                                                                                  \n",
      " expanded_conv_depthwise_re  (None, 112, 112, 32)         0         ['expanded_conv_depthwise_BN[0\n",
      " lu (ReLU)                                                          ][0]']                        \n",
      "                                                                                                  \n",
      " expanded_conv_project (Con  (None, 112, 112, 16)         512       ['expanded_conv_depthwise_relu\n",
      " v2D)                                                               [0][0]']                      \n",
      "                                                                                                  \n",
      " expanded_conv_project_BN (  (None, 112, 112, 16)         64        ['expanded_conv_project[0][0]'\n",
      " BatchNormalization)                                                ]                             \n",
      "                                                                                                  \n",
      " block_1_expand (Conv2D)     (None, 112, 112, 96)         1536      ['expanded_conv_project_BN[0][\n",
      "                                                                    0]']                          \n",
      "                                                                                                  \n",
      " block_1_expand_BN (BatchNo  (None, 112, 112, 96)         384       ['block_1_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_1_expand_relu (ReLU)  (None, 112, 112, 96)         0         ['block_1_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_1_pad (ZeroPadding2D  (None, 113, 113, 96)         0         ['block_1_expand_relu[0][0]'] \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_1_depthwise (Depthwi  (None, 56, 56, 96)           864       ['block_1_pad[0][0]']         \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_1_depthwise_BN (Batc  (None, 56, 56, 96)           384       ['block_1_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_1_depthwise_relu (Re  (None, 56, 56, 96)           0         ['block_1_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_1_project (Conv2D)    (None, 56, 56, 24)           2304      ['block_1_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_1_project_BN (BatchN  (None, 56, 56, 24)           96        ['block_1_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_2_expand (Conv2D)     (None, 56, 56, 144)          3456      ['block_1_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_2_expand_BN (BatchNo  (None, 56, 56, 144)          576       ['block_2_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_2_expand_relu (ReLU)  (None, 56, 56, 144)          0         ['block_2_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_2_depthwise (Depthwi  (None, 56, 56, 144)          1296      ['block_2_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_2_depthwise_BN (Batc  (None, 56, 56, 144)          576       ['block_2_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_2_depthwise_relu (Re  (None, 56, 56, 144)          0         ['block_2_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_2_project (Conv2D)    (None, 56, 56, 24)           3456      ['block_2_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_2_project_BN (BatchN  (None, 56, 56, 24)           96        ['block_2_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_2_add (Add)           (None, 56, 56, 24)           0         ['block_1_project_BN[0][0]',  \n",
      "                                                                     'block_2_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_3_expand (Conv2D)     (None, 56, 56, 144)          3456      ['block_2_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_3_expand_BN (BatchNo  (None, 56, 56, 144)          576       ['block_3_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " block_3_expand_relu (ReLU)  (None, 56, 56, 144)          0         ['block_3_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_3_pad (ZeroPadding2D  (None, 57, 57, 144)          0         ['block_3_expand_relu[0][0]'] \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_3_depthwise (Depthwi  (None, 28, 28, 144)          1296      ['block_3_pad[0][0]']         \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_3_depthwise_BN (Batc  (None, 28, 28, 144)          576       ['block_3_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_3_depthwise_relu (Re  (None, 28, 28, 144)          0         ['block_3_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_3_project (Conv2D)    (None, 28, 28, 32)           4608      ['block_3_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_3_project_BN (BatchN  (None, 28, 28, 32)           128       ['block_3_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_4_expand (Conv2D)     (None, 28, 28, 192)          6144      ['block_3_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_4_expand_BN (BatchNo  (None, 28, 28, 192)          768       ['block_4_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_4_expand_relu (ReLU)  (None, 28, 28, 192)          0         ['block_4_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_4_depthwise (Depthwi  (None, 28, 28, 192)          1728      ['block_4_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_4_depthwise_BN (Batc  (None, 28, 28, 192)          768       ['block_4_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_4_depthwise_relu (Re  (None, 28, 28, 192)          0         ['block_4_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_4_project (Conv2D)    (None, 28, 28, 32)           6144      ['block_4_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_4_project_BN (BatchN  (None, 28, 28, 32)           128       ['block_4_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_4_add (Add)           (None, 28, 28, 32)           0         ['block_3_project_BN[0][0]',  \n",
      "                                                                     'block_4_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_5_expand (Conv2D)     (None, 28, 28, 192)          6144      ['block_4_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_5_expand_BN (BatchNo  (None, 28, 28, 192)          768       ['block_5_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_5_expand_relu (ReLU)  (None, 28, 28, 192)          0         ['block_5_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_5_depthwise (Depthwi  (None, 28, 28, 192)          1728      ['block_5_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_5_depthwise_BN (Batc  (None, 28, 28, 192)          768       ['block_5_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_5_depthwise_relu (Re  (None, 28, 28, 192)          0         ['block_5_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_5_project (Conv2D)    (None, 28, 28, 32)           6144      ['block_5_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_5_project_BN (BatchN  (None, 28, 28, 32)           128       ['block_5_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_5_add (Add)           (None, 28, 28, 32)           0         ['block_4_add[0][0]',         \n",
      "                                                                     'block_5_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_6_expand (Conv2D)     (None, 28, 28, 192)          6144      ['block_5_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_6_expand_BN (BatchNo  (None, 28, 28, 192)          768       ['block_6_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_6_expand_relu (ReLU)  (None, 28, 28, 192)          0         ['block_6_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_6_pad (ZeroPadding2D  (None, 29, 29, 192)          0         ['block_6_expand_relu[0][0]'] \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_6_depthwise (Depthwi  (None, 14, 14, 192)          1728      ['block_6_pad[0][0]']         \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " block_6_depthwise_BN (Batc  (None, 14, 14, 192)          768       ['block_6_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_6_depthwise_relu (Re  (None, 14, 14, 192)          0         ['block_6_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_6_project (Conv2D)    (None, 14, 14, 64)           12288     ['block_6_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_6_project_BN (BatchN  (None, 14, 14, 64)           256       ['block_6_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_7_expand (Conv2D)     (None, 14, 14, 384)          24576     ['block_6_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_7_expand_BN (BatchNo  (None, 14, 14, 384)          1536      ['block_7_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_7_expand_relu (ReLU)  (None, 14, 14, 384)          0         ['block_7_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_7_depthwise (Depthwi  (None, 14, 14, 384)          3456      ['block_7_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_7_depthwise_BN (Batc  (None, 14, 14, 384)          1536      ['block_7_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_7_depthwise_relu (Re  (None, 14, 14, 384)          0         ['block_7_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_7_project (Conv2D)    (None, 14, 14, 64)           24576     ['block_7_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_7_project_BN (BatchN  (None, 14, 14, 64)           256       ['block_7_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_7_add (Add)           (None, 14, 14, 64)           0         ['block_6_project_BN[0][0]',  \n",
      "                                                                     'block_7_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_8_expand (Conv2D)     (None, 14, 14, 384)          24576     ['block_7_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_8_expand_BN (BatchNo  (None, 14, 14, 384)          1536      ['block_8_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_8_expand_relu (ReLU)  (None, 14, 14, 384)          0         ['block_8_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_8_depthwise (Depthwi  (None, 14, 14, 384)          3456      ['block_8_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_8_depthwise_BN (Batc  (None, 14, 14, 384)          1536      ['block_8_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_8_depthwise_relu (Re  (None, 14, 14, 384)          0         ['block_8_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_8_project (Conv2D)    (None, 14, 14, 64)           24576     ['block_8_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_8_project_BN (BatchN  (None, 14, 14, 64)           256       ['block_8_project[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_8_add (Add)           (None, 14, 14, 64)           0         ['block_7_add[0][0]',         \n",
      "                                                                     'block_8_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_9_expand (Conv2D)     (None, 14, 14, 384)          24576     ['block_8_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_9_expand_BN (BatchNo  (None, 14, 14, 384)          1536      ['block_9_expand[0][0]']      \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " block_9_expand_relu (ReLU)  (None, 14, 14, 384)          0         ['block_9_expand_BN[0][0]']   \n",
      "                                                                                                  \n",
      " block_9_depthwise (Depthwi  (None, 14, 14, 384)          3456      ['block_9_expand_relu[0][0]'] \n",
      " seConv2D)                                                                                        \n",
      "                                                                                                  \n",
      " block_9_depthwise_BN (Batc  (None, 14, 14, 384)          1536      ['block_9_depthwise[0][0]']   \n",
      " hNormalization)                                                                                  \n",
      "                                                                                                  \n",
      " block_9_depthwise_relu (Re  (None, 14, 14, 384)          0         ['block_9_depthwise_BN[0][0]']\n",
      " LU)                                                                                              \n",
      "                                                                                                  \n",
      " block_9_project (Conv2D)    (None, 14, 14, 64)           24576     ['block_9_depthwise_relu[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " block_9_project_BN (BatchN  (None, 14, 14, 64)           256       ['block_9_project[0][0]']     \n",
      " ormalization)                                                                                    \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " block_9_add (Add)           (None, 14, 14, 64)           0         ['block_8_add[0][0]',         \n",
      "                                                                     'block_9_project_BN[0][0]']  \n",
      "                                                                                                  \n",
      " block_10_expand (Conv2D)    (None, 14, 14, 384)          24576     ['block_9_add[0][0]']         \n",
      "                                                                                                  \n",
      " block_10_expand_BN (BatchN  (None, 14, 14, 384)          1536      ['block_10_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_10_expand_relu (ReLU  (None, 14, 14, 384)          0         ['block_10_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_10_depthwise (Depthw  (None, 14, 14, 384)          3456      ['block_10_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_10_depthwise_BN (Bat  (None, 14, 14, 384)          1536      ['block_10_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_10_depthwise_relu (R  (None, 14, 14, 384)          0         ['block_10_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_10_project (Conv2D)   (None, 14, 14, 96)           36864     ['block_10_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_10_project_BN (Batch  (None, 14, 14, 96)           384       ['block_10_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_11_expand (Conv2D)    (None, 14, 14, 576)          55296     ['block_10_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_11_expand_BN (BatchN  (None, 14, 14, 576)          2304      ['block_11_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_11_expand_relu (ReLU  (None, 14, 14, 576)          0         ['block_11_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_11_depthwise (Depthw  (None, 14, 14, 576)          5184      ['block_11_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_11_depthwise_BN (Bat  (None, 14, 14, 576)          2304      ['block_11_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_11_depthwise_relu (R  (None, 14, 14, 576)          0         ['block_11_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_11_project (Conv2D)   (None, 14, 14, 96)           55296     ['block_11_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_11_project_BN (Batch  (None, 14, 14, 96)           384       ['block_11_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_11_add (Add)          (None, 14, 14, 96)           0         ['block_10_project_BN[0][0]', \n",
      "                                                                     'block_11_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_12_expand (Conv2D)    (None, 14, 14, 576)          55296     ['block_11_add[0][0]']        \n",
      "                                                                                                  \n",
      " block_12_expand_BN (BatchN  (None, 14, 14, 576)          2304      ['block_12_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_12_expand_relu (ReLU  (None, 14, 14, 576)          0         ['block_12_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_12_depthwise (Depthw  (None, 14, 14, 576)          5184      ['block_12_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_12_depthwise_BN (Bat  (None, 14, 14, 576)          2304      ['block_12_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_12_depthwise_relu (R  (None, 14, 14, 576)          0         ['block_12_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_12_project (Conv2D)   (None, 14, 14, 96)           55296     ['block_12_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_12_project_BN (Batch  (None, 14, 14, 96)           384       ['block_12_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_12_add (Add)          (None, 14, 14, 96)           0         ['block_11_add[0][0]',        \n",
      "                                                                     'block_12_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_13_expand (Conv2D)    (None, 14, 14, 576)          55296     ['block_12_add[0][0]']        \n",
      "                                                                                                  \n",
      " block_13_expand_BN (BatchN  (None, 14, 14, 576)          2304      ['block_13_expand[0][0]']     \n",
      " ormalization)                                                                                    \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " block_13_expand_relu (ReLU  (None, 14, 14, 576)          0         ['block_13_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_13_pad (ZeroPadding2  (None, 15, 15, 576)          0         ['block_13_expand_relu[0][0]']\n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " block_13_depthwise (Depthw  (None, 7, 7, 576)            5184      ['block_13_pad[0][0]']        \n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_13_depthwise_BN (Bat  (None, 7, 7, 576)            2304      ['block_13_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_13_depthwise_relu (R  (None, 7, 7, 576)            0         ['block_13_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_13_project (Conv2D)   (None, 7, 7, 160)            92160     ['block_13_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_13_project_BN (Batch  (None, 7, 7, 160)            640       ['block_13_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_14_expand (Conv2D)    (None, 7, 7, 960)            153600    ['block_13_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_14_expand_BN (BatchN  (None, 7, 7, 960)            3840      ['block_14_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_14_expand_relu (ReLU  (None, 7, 7, 960)            0         ['block_14_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_14_depthwise (Depthw  (None, 7, 7, 960)            8640      ['block_14_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_14_depthwise_BN (Bat  (None, 7, 7, 960)            3840      ['block_14_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_14_depthwise_relu (R  (None, 7, 7, 960)            0         ['block_14_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_14_project (Conv2D)   (None, 7, 7, 160)            153600    ['block_14_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_14_project_BN (Batch  (None, 7, 7, 160)            640       ['block_14_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_14_add (Add)          (None, 7, 7, 160)            0         ['block_13_project_BN[0][0]', \n",
      "                                                                     'block_14_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_15_expand (Conv2D)    (None, 7, 7, 960)            153600    ['block_14_add[0][0]']        \n",
      "                                                                                                  \n",
      " block_15_expand_BN (BatchN  (None, 7, 7, 960)            3840      ['block_15_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_15_expand_relu (ReLU  (None, 7, 7, 960)            0         ['block_15_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_15_depthwise (Depthw  (None, 7, 7, 960)            8640      ['block_15_expand_relu[0][0]']\n",
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_15_depthwise_BN (Bat  (None, 7, 7, 960)            3840      ['block_15_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_15_depthwise_relu (R  (None, 7, 7, 960)            0         ['block_15_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_15_project (Conv2D)   (None, 7, 7, 160)            153600    ['block_15_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_15_project_BN (Batch  (None, 7, 7, 160)            640       ['block_15_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " block_15_add (Add)          (None, 7, 7, 160)            0         ['block_14_add[0][0]',        \n",
      "                                                                     'block_15_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " block_16_expand (Conv2D)    (None, 7, 7, 960)            153600    ['block_15_add[0][0]']        \n",
      "                                                                                                  \n",
      " block_16_expand_BN (BatchN  (None, 7, 7, 960)            3840      ['block_16_expand[0][0]']     \n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " block_16_expand_relu (ReLU  (None, 7, 7, 960)            0         ['block_16_expand_BN[0][0]']  \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block_16_depthwise (Depthw  (None, 7, 7, 960)            8640      ['block_16_expand_relu[0][0]']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " iseConv2D)                                                                                       \n",
      "                                                                                                  \n",
      " block_16_depthwise_BN (Bat  (None, 7, 7, 960)            3840      ['block_16_depthwise[0][0]']  \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " block_16_depthwise_relu (R  (None, 7, 7, 960)            0         ['block_16_depthwise_BN[0][0]'\n",
      " eLU)                                                               ]                             \n",
      "                                                                                                  \n",
      " block_16_project (Conv2D)   (None, 7, 7, 320)            307200    ['block_16_depthwise_relu[0][0\n",
      "                                                                    ]']                           \n",
      "                                                                                                  \n",
      " block_16_project_BN (Batch  (None, 7, 7, 320)            1280      ['block_16_project[0][0]']    \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " Conv_1 (Conv2D)             (None, 7, 7, 1280)           409600    ['block_16_project_BN[0][0]'] \n",
      "                                                                                                  \n",
      " Conv_1_bn (BatchNormalizat  (None, 7, 7, 1280)           5120      ['Conv_1[0][0]']              \n",
      " ion)                                                                                             \n",
      "                                                                                                  \n",
      " out_relu (ReLU)             (None, 7, 7, 1280)           0         ['Conv_1_bn[0][0]']           \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 2257984 (8.61 MB)\n",
      "Trainable params: 0 (0.00 Byte)\n",
      "Non-trainable params: 2257984 (8.61 MB)\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "mobnet_conv.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b1131040",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " mobilenetv2_1.00_224 (Func  (None, 7, 7, 1280)        2257984   \n",
      " tional)                                                         \n",
      "                                                                 \n",
      " global_average_pooling2d (  (None, 1280)              0         \n",
      " GlobalAveragePooling2D)                                         \n",
      "                                                                 \n",
      " dense (Dense)               (None, 256)               327936    \n",
      "                                                                 \n",
      " dropout (Dropout)           (None, 256)               0         \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 128)               32896     \n",
      "                                                                 \n",
      " dropout_1 (Dropout)         (None, 128)               0         \n",
      "                                                                 \n",
      " dense_2 (Dense)             (None, 1)                 129       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 2618945 (9.99 MB)\n",
      "Trainable params: 360961 (1.38 MB)\n",
      "Non-trainable params: 2257984 (8.61 MB)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "mobnet_model = Sequential()\n",
    "\n",
    "mobnet_model.add(mobnet_conv)\n",
    "mobnet_model.add(GlobalAveragePooling2D())\n",
    "mobnet_model.add(Dense(256, activation = 'relu'))\n",
    "mobnet_model.add(Dropout(0.2))\n",
    "mobnet_model.add(Dense(128, activation = 'relu'))\n",
    "mobnet_model.add(Dropout(0.2))\n",
    "mobnet_model.add(Dense(1, activation = 'sigmoid'))\n",
    "\n",
    "mobnet_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "34ef5750",
   "metadata": {},
   "outputs": [],
   "source": [
    "mobnet_model.compile(optimizer = tf.keras.optimizers.legacy.Adam(learning_rate=0.00002),\n",
    "                     loss=tf.losses.BinaryCrossentropy(),\n",
    "                     metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0e11c9e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "tensorboard_callback = tf.keras.callbacks.TensorBoard(log_dir='logs')\n",
    "earlystop_callback = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=3, verbose= 1, restore_best_weights=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "064acec8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-28 11:12:52.391302: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31/31 [==============================] - ETA: 0s - loss: 0.7825 - accuracy: 0.4794"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-28 11:13:03.794283: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31/31 [==============================] - 16s 394ms/step - loss: 0.7825 - accuracy: 0.4794 - val_loss: 0.6633 - val_accuracy: 0.5068\n",
      "Epoch 2/50\n",
      "31/31 [==============================] - 12s 334ms/step - loss: 0.6438 - accuracy: 0.6131 - val_loss: 0.5513 - val_accuracy: 0.8055\n",
      "Epoch 3/50\n",
      "31/31 [==============================] - 12s 335ms/step - loss: 0.5519 - accuracy: 0.7472 - val_loss: 0.4672 - val_accuracy: 0.8795\n",
      "Epoch 4/50\n",
      "31/31 [==============================] - 13s 335ms/step - loss: 0.4870 - accuracy: 0.8263 - val_loss: 0.4030 - val_accuracy: 0.8986\n",
      "Epoch 5/50\n",
      "31/31 [==============================] - 12s 328ms/step - loss: 0.4265 - accuracy: 0.8541 - val_loss: 0.3516 - val_accuracy: 0.9123\n",
      "Epoch 6/50\n",
      "31/31 [==============================] - 12s 333ms/step - loss: 0.3856 - accuracy: 0.8715 - val_loss: 0.3096 - val_accuracy: 0.9260\n",
      "Epoch 7/50\n",
      "31/31 [==============================] - 13s 334ms/step - loss: 0.3449 - accuracy: 0.8921 - val_loss: 0.2761 - val_accuracy: 0.9397\n",
      "Epoch 8/50\n",
      "31/31 [==============================] - 12s 325ms/step - loss: 0.3139 - accuracy: 0.9054 - val_loss: 0.2475 - val_accuracy: 0.9479\n",
      "Epoch 9/50\n",
      "31/31 [==============================] - 12s 331ms/step - loss: 0.2891 - accuracy: 0.9090 - val_loss: 0.2238 - val_accuracy: 0.9589\n",
      "Epoch 10/50\n",
      "31/31 [==============================] - 12s 330ms/step - loss: 0.2588 - accuracy: 0.9224 - val_loss: 0.2043 - val_accuracy: 0.9616\n",
      "Epoch 11/50\n",
      "31/31 [==============================] - 12s 334ms/step - loss: 0.2460 - accuracy: 0.9255 - val_loss: 0.1885 - val_accuracy: 0.9616\n",
      "Epoch 12/50\n",
      "31/31 [==============================] - 12s 332ms/step - loss: 0.2304 - accuracy: 0.9311 - val_loss: 0.1746 - val_accuracy: 0.9616\n",
      "Epoch 13/50\n",
      "31/31 [==============================] - 12s 329ms/step - loss: 0.2186 - accuracy: 0.9332 - val_loss: 0.1633 - val_accuracy: 0.9644\n",
      "Epoch 14/50\n",
      "31/31 [==============================] - 12s 328ms/step - loss: 0.1999 - accuracy: 0.9399 - val_loss: 0.1534 - val_accuracy: 0.9616\n",
      "Epoch 15/50\n",
      "31/31 [==============================] - 12s 325ms/step - loss: 0.1903 - accuracy: 0.9414 - val_loss: 0.1449 - val_accuracy: 0.9644\n",
      "Epoch 16/50\n",
      "31/31 [==============================] - 12s 327ms/step - loss: 0.1889 - accuracy: 0.9409 - val_loss: 0.1374 - val_accuracy: 0.9671\n",
      "Epoch 17/50\n",
      "31/31 [==============================] - 12s 327ms/step - loss: 0.1702 - accuracy: 0.9486 - val_loss: 0.1311 - val_accuracy: 0.9671\n",
      "Epoch 18/50\n",
      "31/31 [==============================] - 12s 326ms/step - loss: 0.1674 - accuracy: 0.9476 - val_loss: 0.1253 - val_accuracy: 0.9671\n",
      "Epoch 19/50\n",
      "31/31 [==============================] - 12s 330ms/step - loss: 0.1628 - accuracy: 0.9455 - val_loss: 0.1204 - val_accuracy: 0.9671\n",
      "Epoch 20/50\n",
      "31/31 [==============================] - 12s 327ms/step - loss: 0.1576 - accuracy: 0.9496 - val_loss: 0.1160 - val_accuracy: 0.9644\n",
      "Epoch 21/50\n",
      "31/31 [==============================] - 12s 327ms/step - loss: 0.1497 - accuracy: 0.9522 - val_loss: 0.1122 - val_accuracy: 0.9644\n",
      "Epoch 22/50\n",
      "31/31 [==============================] - 12s 327ms/step - loss: 0.1447 - accuracy: 0.9496 - val_loss: 0.1087 - val_accuracy: 0.9644\n",
      "Epoch 23/50\n",
      "31/31 [==============================] - 12s 329ms/step - loss: 0.1379 - accuracy: 0.9584 - val_loss: 0.1059 - val_accuracy: 0.9671\n",
      "Epoch 24/50\n",
      "31/31 [==============================] - 12s 329ms/step - loss: 0.1394 - accuracy: 0.9527 - val_loss: 0.1032 - val_accuracy: 0.9726\n",
      "Epoch 25/50\n",
      "31/31 [==============================] - 12s 331ms/step - loss: 0.1330 - accuracy: 0.9532 - val_loss: 0.1004 - val_accuracy: 0.9644\n",
      "Epoch 26/50\n",
      "31/31 [==============================] - 12s 338ms/step - loss: 0.1303 - accuracy: 0.9563 - val_loss: 0.0982 - val_accuracy: 0.9753\n",
      "Epoch 27/50\n",
      "31/31 [==============================] - 12s 335ms/step - loss: 0.1223 - accuracy: 0.9527 - val_loss: 0.0962 - val_accuracy: 0.9753\n",
      "Epoch 28/50\n",
      "31/31 [==============================] - 12s 335ms/step - loss: 0.1255 - accuracy: 0.9584 - val_loss: 0.0944 - val_accuracy: 0.9753\n",
      "Epoch 29/50\n",
      "31/31 [==============================] - 12s 327ms/step - loss: 0.1188 - accuracy: 0.9584 - val_loss: 0.0929 - val_accuracy: 0.9781\n",
      "Epoch 30/50\n",
      "31/31 [==============================] - 12s 332ms/step - loss: 0.1165 - accuracy: 0.9640 - val_loss: 0.0913 - val_accuracy: 0.9781\n",
      "Epoch 31/50\n",
      "31/31 [==============================] - 12s 336ms/step - loss: 0.1147 - accuracy: 0.9620 - val_loss: 0.0900 - val_accuracy: 0.9781\n",
      "Epoch 32/50\n",
      "31/31 [==============================] - 12s 329ms/step - loss: 0.1099 - accuracy: 0.9630 - val_loss: 0.0887 - val_accuracy: 0.9781\n",
      "Epoch 33/50\n",
      "31/31 [==============================] - 12s 332ms/step - loss: 0.1068 - accuracy: 0.9609 - val_loss: 0.0875 - val_accuracy: 0.9781\n",
      "Epoch 34/50\n",
      "31/31 [==============================] - 12s 328ms/step - loss: 0.1072 - accuracy: 0.9635 - val_loss: 0.0865 - val_accuracy: 0.9753\n",
      "Epoch 35/50\n",
      "31/31 [==============================] - 12s 332ms/step - loss: 0.1003 - accuracy: 0.9697 - val_loss: 0.0854 - val_accuracy: 0.9781\n",
      "Epoch 36/50\n",
      "31/31 [==============================] - 12s 336ms/step - loss: 0.1010 - accuracy: 0.9651 - val_loss: 0.0843 - val_accuracy: 0.9753\n",
      "Epoch 37/50\n",
      "31/31 [==============================] - 12s 329ms/step - loss: 0.1003 - accuracy: 0.9640 - val_loss: 0.0833 - val_accuracy: 0.9753\n",
      "Epoch 38/50\n",
      "31/31 [==============================] - 12s 327ms/step - loss: 0.0946 - accuracy: 0.9645 - val_loss: 0.0823 - val_accuracy: 0.9753\n",
      "Epoch 39/50\n",
      "31/31 [==============================] - 12s 330ms/step - loss: 0.0953 - accuracy: 0.9717 - val_loss: 0.0814 - val_accuracy: 0.9753\n",
      "Epoch 40/50\n",
      "31/31 [==============================] - 12s 328ms/step - loss: 0.0936 - accuracy: 0.9692 - val_loss: 0.0804 - val_accuracy: 0.9753\n",
      "Epoch 41/50\n",
      "31/31 [==============================] - 12s 325ms/step - loss: 0.0886 - accuracy: 0.9687 - val_loss: 0.0799 - val_accuracy: 0.9753\n",
      "Epoch 42/50\n",
      "31/31 [==============================] - 12s 336ms/step - loss: 0.0965 - accuracy: 0.9676 - val_loss: 0.0792 - val_accuracy: 0.9753\n",
      "Epoch 43/50\n",
      "31/31 [==============================] - 12s 328ms/step - loss: 0.0916 - accuracy: 0.9681 - val_loss: 0.0786 - val_accuracy: 0.9753\n",
      "Epoch 44/50\n",
      "31/31 [==============================] - 12s 326ms/step - loss: 0.0858 - accuracy: 0.9687 - val_loss: 0.0780 - val_accuracy: 0.9753\n",
      "Epoch 45/50\n",
      "31/31 [==============================] - 12s 329ms/step - loss: 0.0805 - accuracy: 0.9733 - val_loss: 0.0773 - val_accuracy: 0.9753\n",
      "Epoch 46/50\n",
      "31/31 [==============================] - 12s 332ms/step - loss: 0.0819 - accuracy: 0.9733 - val_loss: 0.0770 - val_accuracy: 0.9753\n",
      "Epoch 47/50\n",
      "31/31 [==============================] - 12s 328ms/step - loss: 0.0784 - accuracy: 0.9774 - val_loss: 0.0769 - val_accuracy: 0.9753\n",
      "Epoch 48/50\n",
      "31/31 [==============================] - 12s 340ms/step - loss: 0.0795 - accuracy: 0.9728 - val_loss: 0.0757 - val_accuracy: 0.9753\n",
      "Epoch 49/50\n",
      "31/31 [==============================] - 13s 348ms/step - loss: 0.0813 - accuracy: 0.9738 - val_loss: 0.0751 - val_accuracy: 0.9753\n",
      "Epoch 50/50\n",
      "31/31 [==============================] - 13s 354ms/step - loss: 0.0777 - accuracy: 0.9758 - val_loss: 0.0746 - val_accuracy: 0.9753\n"
     ]
    }
   ],
   "source": [
    "history_mobnet = mobnet_model.fit(train, epochs=60, validation_data=dev, callbacks=[tensorboard_callback, earlystop_callback])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d8e79d6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "loss_acc_fig(history_mobnet)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "46c20076",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-28 11:23:47.225424: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 1s 34ms/step\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-28 11:23:48.282130: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 1s 346ms/step\n",
      "tf.Tensor(0.984127, shape=(), dtype=float32) tf.Tensor(1.0, shape=(), dtype=float32) tf.Tensor(0.9918033, shape=(), dtype=float32)\n"
     ]
    }
   ],
   "source": [
    "ppv_tpr_acc_test(mobnet_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "8393e9df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 0s 96ms/step\n",
      "2/2 [==============================] - 0s 147ms/step\n",
      "[[59  1]\n",
      " [ 0 62]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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SIiiCFdXV4SHh2PmzJkAALlcDicnJ8THx2P8+PEatWsUJ1sSERGZMoUoSnLJ5XLk5+erXHK5XKeYMjMzkZOTg169einLZDIZAgICcPz4cY3bYSJBRERUTcTFxalM/dvb2yMuLk6ntnJycgAATk5OKuVOTk7Ke5owiiOyiYiITJlUawiioqIQERGhUvb3DQu6EARB5bMoimplz8JEgoiISM+k2rUhk8leOHF4ytnZGcCTkQkXFxdleW5urtooxbNwaoOIiEjPjPE14p6ennB2dkZKSoqyrKSkBKmpqfD399e4HY5IEBERmai//voLv//+u/JzZmYm0tPT4eDggIYNGyI8PByxsbHw9vaGt7c3YmNjYW1tjeDgYI37YCJBRESkZ4Y6aeHMmTN44403lJ+frq8YNWoU1q9fj8jISBQVFSEsLEx5INWBAwdga2urcR88R4LoJcJzJIjUVcU5Eh1cAyRp5/StVEnakRLXSBAREZHOOLVBRESkZ6IJv0aciQQREZGemeAqAiVObRAREZHOOCJBRESkZ4Z6jXhVYCJBRESkZ5zaICIiIqoARySIiIj0jFMbREREpDNu/yQiIiKdKbhGgoiIiEgdRySIiIj0jFMbREREpDNObRARERFVgCMSREREesapDSIiItIZpzaIiIiIKsARCSIiIj3j1AYRERHpjFMbRERERBXgiAQREZGecWqDiIiIdCaKCkOHoDdMJIiIiPTMlF8jzjUSREREpDOOSBAREemZaMK7NphIEBER6RmnNoiIiIgqwBEJIiIiPePUBhEREemMJ1sSERERVYAjEkRERHrGky2JiIhIZ6a8RoJTG0RERKQzjkgQERHpmSmfI8FEgoiISM9MeWqDiQQREZGecfsnERERUQU4IkFERKRnnNogIiIinZnyYktObRAREZHOOCJBRESkZ5zaICIiIp1x1wYRERFRBTgiQUREpGd8aRcRERHpjFMbRERERBXgiAQREZGecdcGERER6cyU10hwaoOIiEjPRFGU5NLF8uXL4enpCUtLS7Rr1w5HjhyR9LsxkSAiIjJRmzdvRnh4OGbNmoXz58+ja9euCAoKQlZWlmR9CKIJTtyYWTQwdAhERqnolrR/EyEyBeb1Gum/D4l+L5WW/KlV/Y4dO6Jt27ZISkpSljVv3hwDBgxAXFycJDFxRIKIiEjPRIkubZSUlODs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",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "confusion_mat(mobnet_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eea6bb5f",
   "metadata": {},
   "source": [
    "### ResNet152v2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "09747da5",
   "metadata": {},
   "outputs": [],
   "source": [
    "resnet_conv = ResNet152V2(include_top=False, weights='imagenet')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3bedb22a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"resnet152v2\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                Output Shape                 Param #   Connected to                  \n",
      "==================================================================================================\n",
      " input_2 (InputLayer)        [(None, None, None, 3)]      0         []                            \n",
      "                                                                                                  \n",
      " conv1_pad (ZeroPadding2D)   (None, None, None, 3)        0         ['input_2[0][0]']             \n",
      "                                                                                                  \n",
      " conv1_conv (Conv2D)         (None, None, None, 64)       9472      ['conv1_pad[0][0]']           \n",
      "                                                                                                  \n",
      " pool1_pad (ZeroPadding2D)   (None, None, None, 64)       0         ['conv1_conv[0][0]']          \n",
      "                                                                                                  \n",
      " pool1_pool (MaxPooling2D)   (None, None, None, 64)       0         ['pool1_pad[0][0]']           \n",
      "                                                                                                  \n",
      " conv2_block1_preact_bn (Ba  (None, None, None, 64)       256       ['pool1_pool[0][0]']          \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv2_block1_preact_relu (  (None, None, None, 64)       0         ['conv2_block1_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv2_block1_1_conv (Conv2  (None, None, None, 64)       4096      ['conv2_block1_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv2_block1_1_bn (BatchNo  (None, None, None, 64)       256       ['conv2_block1_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv2_block1_1_relu (Activ  (None, None, None, 64)       0         ['conv2_block1_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv2_block1_2_pad (ZeroPa  (None, None, None, 64)       0         ['conv2_block1_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block1_2_conv (Conv2  (None, None, None, 64)       36864     ['conv2_block1_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block1_2_bn (BatchNo  (None, None, None, 64)       256       ['conv2_block1_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv2_block1_2_relu (Activ  (None, None, None, 64)       0         ['conv2_block1_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv2_block1_0_conv (Conv2  (None, None, None, 256)      16640     ['conv2_block1_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv2_block1_3_conv (Conv2  (None, None, None, 256)      16640     ['conv2_block1_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block1_out (Add)      (None, None, None, 256)      0         ['conv2_block1_0_conv[0][0]', \n",
      "                                                                     'conv2_block1_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv2_block2_preact_bn (Ba  (None, None, None, 256)      1024      ['conv2_block1_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv2_block2_preact_relu (  (None, None, None, 256)      0         ['conv2_block2_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv2_block2_1_conv (Conv2  (None, None, None, 64)       16384     ['conv2_block2_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv2_block2_1_bn (BatchNo  (None, None, None, 64)       256       ['conv2_block2_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv2_block2_1_relu (Activ  (None, None, None, 64)       0         ['conv2_block2_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv2_block2_2_pad (ZeroPa  (None, None, None, 64)       0         ['conv2_block2_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block2_2_conv (Conv2  (None, None, None, 64)       36864     ['conv2_block2_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block2_2_bn (BatchNo  (None, None, None, 64)       256       ['conv2_block2_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv2_block2_2_relu (Activ  (None, None, None, 64)       0         ['conv2_block2_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv2_block2_3_conv (Conv2  (None, None, None, 256)      16640     ['conv2_block2_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block2_out (Add)      (None, None, None, 256)      0         ['conv2_block1_out[0][0]',    \n",
      "                                                                     'conv2_block2_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv2_block3_preact_bn (Ba  (None, None, None, 256)      1024      ['conv2_block2_out[0][0]']    \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv2_block3_preact_relu (  (None, None, None, 256)      0         ['conv2_block3_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv2_block3_1_conv (Conv2  (None, None, None, 64)       16384     ['conv2_block3_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv2_block3_1_bn (BatchNo  (None, None, None, 64)       256       ['conv2_block3_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv2_block3_1_relu (Activ  (None, None, None, 64)       0         ['conv2_block3_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv2_block3_2_pad (ZeroPa  (None, None, None, 64)       0         ['conv2_block3_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv2_block3_2_conv (Conv2  (None, None, None, 64)       36864     ['conv2_block3_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block3_2_bn (BatchNo  (None, None, None, 64)       256       ['conv2_block3_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv2_block3_2_relu (Activ  (None, None, None, 64)       0         ['conv2_block3_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " max_pooling2d (MaxPooling2  (None, None, None, 256)      0         ['conv2_block2_out[0][0]']    \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block3_3_conv (Conv2  (None, None, None, 256)      16640     ['conv2_block3_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv2_block3_out (Add)      (None, None, None, 256)      0         ['max_pooling2d[0][0]',       \n",
      "                                                                     'conv2_block3_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv3_block1_preact_bn (Ba  (None, None, None, 256)      1024      ['conv2_block3_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv3_block1_preact_relu (  (None, None, None, 256)      0         ['conv3_block1_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv3_block1_1_conv (Conv2  (None, None, None, 128)      32768     ['conv3_block1_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block1_1_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block1_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block1_1_relu (Activ  (None, None, None, 128)      0         ['conv3_block1_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block1_2_pad (ZeroPa  (None, None, None, 128)      0         ['conv3_block1_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block1_2_conv (Conv2  (None, None, None, 128)      147456    ['conv3_block1_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block1_2_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block1_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block1_2_relu (Activ  (None, None, None, 128)      0         ['conv3_block1_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block1_0_conv (Conv2  (None, None, None, 512)      131584    ['conv3_block1_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block1_3_conv (Conv2  (None, None, None, 512)      66048     ['conv3_block1_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block1_out (Add)      (None, None, None, 512)      0         ['conv3_block1_0_conv[0][0]', \n",
      "                                                                     'conv3_block1_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv3_block2_preact_bn (Ba  (None, None, None, 512)      2048      ['conv3_block1_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv3_block2_preact_relu (  (None, None, None, 512)      0         ['conv3_block2_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv3_block2_1_conv (Conv2  (None, None, None, 128)      65536     ['conv3_block2_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block2_1_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block2_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv3_block2_1_relu (Activ  (None, None, None, 128)      0         ['conv3_block2_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block2_2_pad (ZeroPa  (None, None, None, 128)      0         ['conv3_block2_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block2_2_conv (Conv2  (None, None, None, 128)      147456    ['conv3_block2_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block2_2_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block2_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block2_2_relu (Activ  (None, None, None, 128)      0         ['conv3_block2_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block2_3_conv (Conv2  (None, None, None, 512)      66048     ['conv3_block2_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block2_out (Add)      (None, None, None, 512)      0         ['conv3_block1_out[0][0]',    \n",
      "                                                                     'conv3_block2_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv3_block3_preact_bn (Ba  (None, None, None, 512)      2048      ['conv3_block2_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv3_block3_preact_relu (  (None, None, None, 512)      0         ['conv3_block3_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv3_block3_1_conv (Conv2  (None, None, None, 128)      65536     ['conv3_block3_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block3_1_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block3_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block3_1_relu (Activ  (None, None, None, 128)      0         ['conv3_block3_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block3_2_pad (ZeroPa  (None, None, None, 128)      0         ['conv3_block3_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block3_2_conv (Conv2  (None, None, None, 128)      147456    ['conv3_block3_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block3_2_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block3_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block3_2_relu (Activ  (None, None, None, 128)      0         ['conv3_block3_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block3_3_conv (Conv2  (None, None, None, 512)      66048     ['conv3_block3_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block3_out (Add)      (None, None, None, 512)      0         ['conv3_block2_out[0][0]',    \n",
      "                                                                     'conv3_block3_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv3_block4_preact_bn (Ba  (None, None, None, 512)      2048      ['conv3_block3_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv3_block4_preact_relu (  (None, None, None, 512)      0         ['conv3_block4_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv3_block4_1_conv (Conv2  (None, None, None, 128)      65536     ['conv3_block4_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block4_1_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block4_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block4_1_relu (Activ  (None, None, None, 128)      0         ['conv3_block4_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block4_2_pad (ZeroPa  (None, None, None, 128)      0         ['conv3_block4_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block4_2_conv (Conv2  (None, None, None, 128)      147456    ['conv3_block4_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block4_2_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block4_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block4_2_relu (Activ  (None, None, None, 128)      0         ['conv3_block4_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block4_3_conv (Conv2  (None, None, None, 512)      66048     ['conv3_block4_2_relu[0][0]'] \n",
      " D)                                                                                               \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " conv3_block4_out (Add)      (None, None, None, 512)      0         ['conv3_block3_out[0][0]',    \n",
      "                                                                     'conv3_block4_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv3_block5_preact_bn (Ba  (None, None, None, 512)      2048      ['conv3_block4_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv3_block5_preact_relu (  (None, None, None, 512)      0         ['conv3_block5_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv3_block5_1_conv (Conv2  (None, None, None, 128)      65536     ['conv3_block5_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block5_1_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block5_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block5_1_relu (Activ  (None, None, None, 128)      0         ['conv3_block5_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block5_2_pad (ZeroPa  (None, None, None, 128)      0         ['conv3_block5_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block5_2_conv (Conv2  (None, None, None, 128)      147456    ['conv3_block5_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block5_2_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block5_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block5_2_relu (Activ  (None, None, None, 128)      0         ['conv3_block5_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block5_3_conv (Conv2  (None, None, None, 512)      66048     ['conv3_block5_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block5_out (Add)      (None, None, None, 512)      0         ['conv3_block4_out[0][0]',    \n",
      "                                                                     'conv3_block5_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv3_block6_preact_bn (Ba  (None, None, None, 512)      2048      ['conv3_block5_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv3_block6_preact_relu (  (None, None, None, 512)      0         ['conv3_block6_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv3_block6_1_conv (Conv2  (None, None, None, 128)      65536     ['conv3_block6_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block6_1_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block6_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block6_1_relu (Activ  (None, None, None, 128)      0         ['conv3_block6_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block6_2_pad (ZeroPa  (None, None, None, 128)      0         ['conv3_block6_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block6_2_conv (Conv2  (None, None, None, 128)      147456    ['conv3_block6_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block6_2_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block6_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block6_2_relu (Activ  (None, None, None, 128)      0         ['conv3_block6_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block6_3_conv (Conv2  (None, None, None, 512)      66048     ['conv3_block6_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block6_out (Add)      (None, None, None, 512)      0         ['conv3_block5_out[0][0]',    \n",
      "                                                                     'conv3_block6_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv3_block7_preact_bn (Ba  (None, None, None, 512)      2048      ['conv3_block6_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv3_block7_preact_relu (  (None, None, None, 512)      0         ['conv3_block7_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv3_block7_1_conv (Conv2  (None, None, None, 128)      65536     ['conv3_block7_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block7_1_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block7_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block7_1_relu (Activ  (None, None, None, 128)      0         ['conv3_block7_1_bn[0][0]']   \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block7_2_pad (ZeroPa  (None, None, None, 128)      0         ['conv3_block7_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block7_2_conv (Conv2  (None, None, None, 128)      147456    ['conv3_block7_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block7_2_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block7_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block7_2_relu (Activ  (None, None, None, 128)      0         ['conv3_block7_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block7_3_conv (Conv2  (None, None, None, 512)      66048     ['conv3_block7_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block7_out (Add)      (None, None, None, 512)      0         ['conv3_block6_out[0][0]',    \n",
      "                                                                     'conv3_block7_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv3_block8_preact_bn (Ba  (None, None, None, 512)      2048      ['conv3_block7_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv3_block8_preact_relu (  (None, None, None, 512)      0         ['conv3_block8_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv3_block8_1_conv (Conv2  (None, None, None, 128)      65536     ['conv3_block8_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv3_block8_1_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block8_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block8_1_relu (Activ  (None, None, None, 128)      0         ['conv3_block8_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv3_block8_2_pad (ZeroPa  (None, None, None, 128)      0         ['conv3_block8_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv3_block8_2_conv (Conv2  (None, None, None, 128)      147456    ['conv3_block8_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block8_2_bn (BatchNo  (None, None, None, 128)      512       ['conv3_block8_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv3_block8_2_relu (Activ  (None, None, None, 128)      0         ['conv3_block8_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " max_pooling2d_1 (MaxPoolin  (None, None, None, 512)      0         ['conv3_block7_out[0][0]']    \n",
      " g2D)                                                                                             \n",
      "                                                                                                  \n",
      " conv3_block8_3_conv (Conv2  (None, None, None, 512)      66048     ['conv3_block8_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv3_block8_out (Add)      (None, None, None, 512)      0         ['max_pooling2d_1[0][0]',     \n",
      "                                                                     'conv3_block8_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block1_preact_bn (Ba  (None, None, None, 512)      2048      ['conv3_block8_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block1_preact_relu (  (None, None, None, 512)      0         ['conv4_block1_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block1_1_conv (Conv2  (None, None, None, 256)      131072    ['conv4_block1_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv4_block1_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block1_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block1_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block1_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block1_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block1_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block1_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block1_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block1_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block1_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block1_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block1_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv4_block1_0_conv (Conv2  (None, None, None, 1024)     525312    ['conv4_block1_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv4_block1_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block1_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block1_out (Add)      (None, None, None, 1024)     0         ['conv4_block1_0_conv[0][0]', \n",
      "                                                                     'conv4_block1_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block2_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block1_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block2_preact_relu (  (None, None, None, 1024)     0         ['conv4_block2_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block2_1_conv (Conv2  (None, None, None, 256)      262144    ['conv4_block2_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv4_block2_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block2_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block2_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block2_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block2_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block2_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block2_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block2_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block2_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block2_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block2_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block2_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block2_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block2_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block2_out (Add)      (None, None, None, 1024)     0         ['conv4_block1_out[0][0]',    \n",
      "                                                                     'conv4_block2_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block3_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block2_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block3_preact_relu (  (None, None, None, 1024)     0         ['conv4_block3_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block3_1_conv (Conv2  (None, None, None, 256)      262144    ['conv4_block3_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv4_block3_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block3_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block3_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block3_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block3_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block3_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block3_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block3_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block3_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block3_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block3_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block3_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block3_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block3_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block3_out (Add)      (None, None, None, 1024)     0         ['conv4_block2_out[0][0]',    \n",
      "                                                                     'conv4_block3_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block4_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block3_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block4_preact_relu (  (None, None, None, 1024)     0         ['conv4_block4_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block4_1_conv (Conv2  (None, None, None, 256)      262144    ['conv4_block4_preact_relu[0][\n",
      " D)                                                                 0]']                          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " conv4_block4_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block4_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block4_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block4_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block4_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block4_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block4_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block4_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block4_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block4_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block4_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block4_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block4_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block4_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block4_out (Add)      (None, None, None, 1024)     0         ['conv4_block3_out[0][0]',    \n",
      "                                                                     'conv4_block4_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block5_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block4_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block5_preact_relu (  (None, None, None, 1024)     0         ['conv4_block5_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block5_1_conv (Conv2  (None, None, None, 256)      262144    ['conv4_block5_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv4_block5_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block5_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block5_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block5_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block5_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block5_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block5_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block5_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block5_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block5_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block5_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block5_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block5_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block5_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block5_out (Add)      (None, None, None, 1024)     0         ['conv4_block4_out[0][0]',    \n",
      "                                                                     'conv4_block5_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block6_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block5_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block6_preact_relu (  (None, None, None, 1024)     0         ['conv4_block6_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block6_1_conv (Conv2  (None, None, None, 256)      262144    ['conv4_block6_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv4_block6_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block6_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block6_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block6_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block6_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block6_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block6_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block6_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block6_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block6_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block6_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block6_2_bn[0][0]']   \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block6_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block6_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block6_out (Add)      (None, None, None, 1024)     0         ['conv4_block5_out[0][0]',    \n",
      "                                                                     'conv4_block6_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block7_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block6_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block7_preact_relu (  (None, None, None, 1024)     0         ['conv4_block7_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block7_1_conv (Conv2  (None, None, None, 256)      262144    ['conv4_block7_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv4_block7_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block7_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block7_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block7_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block7_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block7_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block7_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block7_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block7_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block7_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block7_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block7_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block7_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block7_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block7_out (Add)      (None, None, None, 1024)     0         ['conv4_block6_out[0][0]',    \n",
      "                                                                     'conv4_block7_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block8_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block7_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block8_preact_relu (  (None, None, None, 1024)     0         ['conv4_block8_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block8_1_conv (Conv2  (None, None, None, 256)      262144    ['conv4_block8_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv4_block8_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block8_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block8_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block8_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block8_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block8_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block8_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block8_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block8_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block8_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block8_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block8_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block8_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block8_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block8_out (Add)      (None, None, None, 1024)     0         ['conv4_block7_out[0][0]',    \n",
      "                                                                     'conv4_block8_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block9_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block8_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv4_block9_preact_relu (  (None, None, None, 1024)     0         ['conv4_block9_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv4_block9_1_conv (Conv2  (None, None, None, 256)      262144    ['conv4_block9_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv4_block9_1_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block9_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block9_1_relu (Activ  (None, None, None, 256)      0         ['conv4_block9_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block9_2_pad (ZeroPa  (None, None, None, 256)      0         ['conv4_block9_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv4_block9_2_conv (Conv2  (None, None, None, 256)      589824    ['conv4_block9_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block9_2_bn (BatchNo  (None, None, None, 256)      1024      ['conv4_block9_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv4_block9_2_relu (Activ  (None, None, None, 256)      0         ['conv4_block9_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv4_block9_3_conv (Conv2  (None, None, None, 1024)     263168    ['conv4_block9_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv4_block9_out (Add)      (None, None, None, 1024)     0         ['conv4_block8_out[0][0]',    \n",
      "                                                                     'conv4_block9_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv4_block10_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block9_out[0][0]']    \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block10_preact_relu   (None, None, None, 1024)     0         ['conv4_block10_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block10_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block10_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block10_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block10_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block10_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block10_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block10_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block10_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block10_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block10_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block10_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block10_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block10_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block10_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block10_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block10_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block10_out (Add)     (None, None, None, 1024)     0         ['conv4_block9_out[0][0]',    \n",
      "                                                                     'conv4_block10_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block11_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block10_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block11_preact_relu   (None, None, None, 1024)     0         ['conv4_block11_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block11_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block11_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block11_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block11_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block11_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block11_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block11_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block11_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block11_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block11_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block11_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block11_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block11_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block11_2_bn[0][0]']  \n",
      " vation)                                                                                          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " conv4_block11_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block11_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block11_out (Add)     (None, None, None, 1024)     0         ['conv4_block10_out[0][0]',   \n",
      "                                                                     'conv4_block11_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block12_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block11_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block12_preact_relu   (None, None, None, 1024)     0         ['conv4_block12_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block12_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block12_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block12_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block12_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block12_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block12_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block12_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block12_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block12_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block12_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block12_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block12_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block12_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block12_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block12_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block12_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block12_out (Add)     (None, None, None, 1024)     0         ['conv4_block11_out[0][0]',   \n",
      "                                                                     'conv4_block12_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block13_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block12_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block13_preact_relu   (None, None, None, 1024)     0         ['conv4_block13_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block13_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block13_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block13_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block13_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block13_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block13_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block13_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block13_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block13_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block13_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block13_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block13_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block13_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block13_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block13_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block13_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block13_out (Add)     (None, None, None, 1024)     0         ['conv4_block12_out[0][0]',   \n",
      "                                                                     'conv4_block13_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block14_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block13_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block14_preact_relu   (None, None, None, 1024)     0         ['conv4_block14_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block14_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block14_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block14_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block14_1_conv[0][0]']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block14_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block14_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block14_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block14_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block14_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block14_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block14_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block14_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block14_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block14_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block14_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block14_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block14_out (Add)     (None, None, None, 1024)     0         ['conv4_block13_out[0][0]',   \n",
      "                                                                     'conv4_block14_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block15_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block14_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block15_preact_relu   (None, None, None, 1024)     0         ['conv4_block15_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block15_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block15_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block15_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block15_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block15_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block15_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block15_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block15_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block15_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block15_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block15_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block15_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block15_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block15_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block15_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block15_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block15_out (Add)     (None, None, None, 1024)     0         ['conv4_block14_out[0][0]',   \n",
      "                                                                     'conv4_block15_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block16_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block15_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block16_preact_relu   (None, None, None, 1024)     0         ['conv4_block16_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block16_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block16_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block16_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block16_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block16_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block16_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block16_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block16_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block16_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block16_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block16_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block16_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block16_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block16_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv4_block16_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block16_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block16_out (Add)     (None, None, None, 1024)     0         ['conv4_block15_out[0][0]',   \n",
      "                                                                     'conv4_block16_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block17_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block16_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block17_preact_relu   (None, None, None, 1024)     0         ['conv4_block17_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block17_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block17_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block17_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block17_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block17_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block17_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block17_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block17_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block17_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block17_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block17_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block17_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block17_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block17_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block17_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block17_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block17_out (Add)     (None, None, None, 1024)     0         ['conv4_block16_out[0][0]',   \n",
      "                                                                     'conv4_block17_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block18_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block17_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block18_preact_relu   (None, None, None, 1024)     0         ['conv4_block18_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block18_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block18_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block18_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block18_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block18_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block18_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block18_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block18_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block18_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block18_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block18_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block18_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block18_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block18_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block18_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block18_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block18_out (Add)     (None, None, None, 1024)     0         ['conv4_block17_out[0][0]',   \n",
      "                                                                     'conv4_block18_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block19_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block18_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block19_preact_relu   (None, None, None, 1024)     0         ['conv4_block19_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block19_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block19_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block19_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block19_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " conv4_block19_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block19_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block19_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block19_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block19_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block19_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block19_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block19_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block19_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block19_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block19_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block19_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block19_out (Add)     (None, None, None, 1024)     0         ['conv4_block18_out[0][0]',   \n",
      "                                                                     'conv4_block19_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block20_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block19_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block20_preact_relu   (None, None, None, 1024)     0         ['conv4_block20_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block20_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block20_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block20_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block20_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block20_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block20_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block20_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block20_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block20_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block20_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block20_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block20_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block20_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block20_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block20_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block20_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block20_out (Add)     (None, None, None, 1024)     0         ['conv4_block19_out[0][0]',   \n",
      "                                                                     'conv4_block20_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block21_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block20_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block21_preact_relu   (None, None, None, 1024)     0         ['conv4_block21_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block21_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block21_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block21_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block21_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block21_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block21_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block21_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block21_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block21_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block21_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block21_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block21_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block21_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block21_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block21_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block21_2_relu[0][0]']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block21_out (Add)     (None, None, None, 1024)     0         ['conv4_block20_out[0][0]',   \n",
      "                                                                     'conv4_block21_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block22_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block21_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block22_preact_relu   (None, None, None, 1024)     0         ['conv4_block22_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block22_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block22_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block22_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block22_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block22_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block22_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block22_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block22_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block22_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block22_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block22_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block22_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block22_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block22_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block22_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block22_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block22_out (Add)     (None, None, None, 1024)     0         ['conv4_block21_out[0][0]',   \n",
      "                                                                     'conv4_block22_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block23_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block22_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block23_preact_relu   (None, None, None, 1024)     0         ['conv4_block23_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block23_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block23_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block23_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block23_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block23_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block23_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block23_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block23_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block23_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block23_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block23_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block23_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block23_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block23_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block23_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block23_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block23_out (Add)     (None, None, None, 1024)     0         ['conv4_block22_out[0][0]',   \n",
      "                                                                     'conv4_block23_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block24_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block23_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block24_preact_relu   (None, None, None, 1024)     0         ['conv4_block24_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block24_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block24_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block24_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block24_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv4_block24_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block24_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block24_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block24_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block24_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block24_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block24_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block24_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block24_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block24_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block24_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block24_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block24_out (Add)     (None, None, None, 1024)     0         ['conv4_block23_out[0][0]',   \n",
      "                                                                     'conv4_block24_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block25_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block24_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block25_preact_relu   (None, None, None, 1024)     0         ['conv4_block25_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block25_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block25_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block25_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block25_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block25_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block25_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block25_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block25_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block25_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block25_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block25_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block25_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block25_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block25_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block25_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block25_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block25_out (Add)     (None, None, None, 1024)     0         ['conv4_block24_out[0][0]',   \n",
      "                                                                     'conv4_block25_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block26_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block25_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block26_preact_relu   (None, None, None, 1024)     0         ['conv4_block26_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block26_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block26_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block26_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block26_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block26_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block26_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block26_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block26_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block26_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block26_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block26_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block26_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block26_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block26_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block26_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block26_2_relu[0][0]']\n",
      " 2D)                                                                                              \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " conv4_block26_out (Add)     (None, None, None, 1024)     0         ['conv4_block25_out[0][0]',   \n",
      "                                                                     'conv4_block26_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block27_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block26_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block27_preact_relu   (None, None, None, 1024)     0         ['conv4_block27_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block27_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block27_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block27_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block27_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block27_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block27_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block27_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block27_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block27_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block27_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block27_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block27_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block27_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block27_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block27_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block27_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block27_out (Add)     (None, None, None, 1024)     0         ['conv4_block26_out[0][0]',   \n",
      "                                                                     'conv4_block27_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block28_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block27_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block28_preact_relu   (None, None, None, 1024)     0         ['conv4_block28_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block28_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block28_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block28_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block28_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block28_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block28_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block28_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block28_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block28_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block28_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block28_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block28_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block28_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block28_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block28_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block28_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block28_out (Add)     (None, None, None, 1024)     0         ['conv4_block27_out[0][0]',   \n",
      "                                                                     'conv4_block28_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block29_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block28_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block29_preact_relu   (None, None, None, 1024)     0         ['conv4_block29_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block29_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block29_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block29_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block29_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block29_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block29_1_bn[0][0]']  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block29_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block29_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block29_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block29_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block29_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block29_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block29_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block29_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block29_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block29_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block29_out (Add)     (None, None, None, 1024)     0         ['conv4_block28_out[0][0]',   \n",
      "                                                                     'conv4_block29_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block30_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block29_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block30_preact_relu   (None, None, None, 1024)     0         ['conv4_block30_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block30_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block30_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block30_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block30_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block30_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block30_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block30_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block30_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block30_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block30_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block30_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block30_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block30_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block30_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block30_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block30_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block30_out (Add)     (None, None, None, 1024)     0         ['conv4_block29_out[0][0]',   \n",
      "                                                                     'conv4_block30_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block31_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block30_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block31_preact_relu   (None, None, None, 1024)     0         ['conv4_block31_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block31_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block31_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block31_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block31_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block31_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block31_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block31_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block31_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block31_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block31_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block31_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block31_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block31_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block31_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block31_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block31_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv4_block31_out (Add)     (None, None, None, 1024)     0         ['conv4_block30_out[0][0]',   \n",
      "                                                                     'conv4_block31_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block32_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block31_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block32_preact_relu   (None, None, None, 1024)     0         ['conv4_block32_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block32_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block32_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block32_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block32_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block32_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block32_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block32_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block32_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block32_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block32_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block32_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block32_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block32_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block32_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block32_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block32_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block32_out (Add)     (None, None, None, 1024)     0         ['conv4_block31_out[0][0]',   \n",
      "                                                                     'conv4_block32_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block33_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block32_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block33_preact_relu   (None, None, None, 1024)     0         ['conv4_block33_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block33_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block33_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block33_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block33_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block33_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block33_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block33_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block33_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block33_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block33_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block33_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block33_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block33_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block33_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block33_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block33_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block33_out (Add)     (None, None, None, 1024)     0         ['conv4_block32_out[0][0]',   \n",
      "                                                                     'conv4_block33_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block34_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block33_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block34_preact_relu   (None, None, None, 1024)     0         ['conv4_block34_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block34_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block34_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block34_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block34_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block34_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block34_1_bn[0][0]']  \n",
      " vation)                                                                                          \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " conv4_block34_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block34_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block34_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block34_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block34_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block34_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block34_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block34_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block34_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block34_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block34_out (Add)     (None, None, None, 1024)     0         ['conv4_block33_out[0][0]',   \n",
      "                                                                     'conv4_block34_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block35_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block34_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block35_preact_relu   (None, None, None, 1024)     0         ['conv4_block35_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block35_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block35_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block35_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block35_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block35_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block35_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block35_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block35_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block35_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block35_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block35_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block35_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block35_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block35_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block35_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block35_2_relu[0][0]']\n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block35_out (Add)     (None, None, None, 1024)     0         ['conv4_block34_out[0][0]',   \n",
      "                                                                     'conv4_block35_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv4_block36_preact_bn (B  (None, None, None, 1024)     4096      ['conv4_block35_out[0][0]']   \n",
      " atchNormalization)                                                                               \n",
      "                                                                                                  \n",
      " conv4_block36_preact_relu   (None, None, None, 1024)     0         ['conv4_block36_preact_bn[0][0\n",
      " (Activation)                                                       ]']                           \n",
      "                                                                                                  \n",
      " conv4_block36_1_conv (Conv  (None, None, None, 256)      262144    ['conv4_block36_preact_relu[0]\n",
      " 2D)                                                                [0]']                         \n",
      "                                                                                                  \n",
      " conv4_block36_1_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block36_1_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block36_1_relu (Acti  (None, None, None, 256)      0         ['conv4_block36_1_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " conv4_block36_2_pad (ZeroP  (None, None, None, 256)      0         ['conv4_block36_1_relu[0][0]']\n",
      " adding2D)                                                                                        \n",
      "                                                                                                  \n",
      " conv4_block36_2_conv (Conv  (None, None, None, 256)      589824    ['conv4_block36_2_pad[0][0]'] \n",
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block36_2_bn (BatchN  (None, None, None, 256)      1024      ['conv4_block36_2_conv[0][0]']\n",
      " ormalization)                                                                                    \n",
      "                                                                                                  \n",
      " conv4_block36_2_relu (Acti  (None, None, None, 256)      0         ['conv4_block36_2_bn[0][0]']  \n",
      " vation)                                                                                          \n",
      "                                                                                                  \n",
      " max_pooling2d_2 (MaxPoolin  (None, None, None, 1024)     0         ['conv4_block35_out[0][0]']   \n",
      " g2D)                                                                                             \n",
      "                                                                                                  \n",
      " conv4_block36_3_conv (Conv  (None, None, None, 1024)     263168    ['conv4_block36_2_relu[0][0]']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 2D)                                                                                              \n",
      "                                                                                                  \n",
      " conv4_block36_out (Add)     (None, None, None, 1024)     0         ['max_pooling2d_2[0][0]',     \n",
      "                                                                     'conv4_block36_3_conv[0][0]']\n",
      "                                                                                                  \n",
      " conv5_block1_preact_bn (Ba  (None, None, None, 1024)     4096      ['conv4_block36_out[0][0]']   \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv5_block1_preact_relu (  (None, None, None, 1024)     0         ['conv5_block1_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv5_block1_1_conv (Conv2  (None, None, None, 512)      524288    ['conv5_block1_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv5_block1_1_bn (BatchNo  (None, None, None, 512)      2048      ['conv5_block1_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv5_block1_1_relu (Activ  (None, None, None, 512)      0         ['conv5_block1_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv5_block1_2_pad (ZeroPa  (None, None, None, 512)      0         ['conv5_block1_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block1_2_conv (Conv2  (None, None, None, 512)      2359296   ['conv5_block1_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block1_2_bn (BatchNo  (None, None, None, 512)      2048      ['conv5_block1_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv5_block1_2_relu (Activ  (None, None, None, 512)      0         ['conv5_block1_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv5_block1_0_conv (Conv2  (None, None, None, 2048)     2099200   ['conv5_block1_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv5_block1_3_conv (Conv2  (None, None, None, 2048)     1050624   ['conv5_block1_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block1_out (Add)      (None, None, None, 2048)     0         ['conv5_block1_0_conv[0][0]', \n",
      "                                                                     'conv5_block1_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv5_block2_preact_bn (Ba  (None, None, None, 2048)     8192      ['conv5_block1_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv5_block2_preact_relu (  (None, None, None, 2048)     0         ['conv5_block2_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv5_block2_1_conv (Conv2  (None, None, None, 512)      1048576   ['conv5_block2_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n",
      " conv5_block2_1_bn (BatchNo  (None, None, None, 512)      2048      ['conv5_block2_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv5_block2_1_relu (Activ  (None, None, None, 512)      0         ['conv5_block2_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv5_block2_2_pad (ZeroPa  (None, None, None, 512)      0         ['conv5_block2_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block2_2_conv (Conv2  (None, None, None, 512)      2359296   ['conv5_block2_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block2_2_bn (BatchNo  (None, None, None, 512)      2048      ['conv5_block2_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv5_block2_2_relu (Activ  (None, None, None, 512)      0         ['conv5_block2_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv5_block2_3_conv (Conv2  (None, None, None, 2048)     1050624   ['conv5_block2_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block2_out (Add)      (None, None, None, 2048)     0         ['conv5_block1_out[0][0]',    \n",
      "                                                                     'conv5_block2_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " conv5_block3_preact_bn (Ba  (None, None, None, 2048)     8192      ['conv5_block2_out[0][0]']    \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv5_block3_preact_relu (  (None, None, None, 2048)     0         ['conv5_block3_preact_bn[0][0]\n",
      " Activation)                                                        ']                            \n",
      "                                                                                                  \n",
      " conv5_block3_1_conv (Conv2  (None, None, None, 512)      1048576   ['conv5_block3_preact_relu[0][\n",
      " D)                                                                 0]']                          \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv5_block3_1_bn (BatchNo  (None, None, None, 512)      2048      ['conv5_block3_1_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv5_block3_1_relu (Activ  (None, None, None, 512)      0         ['conv5_block3_1_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv5_block3_2_pad (ZeroPa  (None, None, None, 512)      0         ['conv5_block3_1_relu[0][0]'] \n",
      " dding2D)                                                                                         \n",
      "                                                                                                  \n",
      " conv5_block3_2_conv (Conv2  (None, None, None, 512)      2359296   ['conv5_block3_2_pad[0][0]']  \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block3_2_bn (BatchNo  (None, None, None, 512)      2048      ['conv5_block3_2_conv[0][0]'] \n",
      " rmalization)                                                                                     \n",
      "                                                                                                  \n",
      " conv5_block3_2_relu (Activ  (None, None, None, 512)      0         ['conv5_block3_2_bn[0][0]']   \n",
      " ation)                                                                                           \n",
      "                                                                                                  \n",
      " conv5_block3_3_conv (Conv2  (None, None, None, 2048)     1050624   ['conv5_block3_2_relu[0][0]'] \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv5_block3_out (Add)      (None, None, None, 2048)     0         ['conv5_block2_out[0][0]',    \n",
      "                                                                     'conv5_block3_3_conv[0][0]'] \n",
      "                                                                                                  \n",
      " post_bn (BatchNormalizatio  (None, None, None, 2048)     8192      ['conv5_block3_out[0][0]']    \n",
      " n)                                                                                               \n",
      "                                                                                                  \n",
      " post_relu (Activation)      (None, None, None, 2048)     0         ['post_bn[0][0]']             \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 58331648 (222.52 MB)\n",
      "Trainable params: 0 (0.00 Byte)\n",
      "Non-trainable params: 58331648 (222.52 MB)\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "resnet_conv.trainable = False\n",
    "resnet_conv.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "36696151",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_1\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " resnet152v2 (Functional)    (None, None, None, 2048   58331648  \n",
      "                             )                                   \n",
      "                                                                 \n",
      " global_average_pooling2d_1  (None, 2048)              0         \n",
      "  (GlobalAveragePooling2D)                                       \n",
      "                                                                 \n",
      " dense_3 (Dense)             (None, 256)               524544    \n",
      "                                                                 \n",
      " dropout_2 (Dropout)         (None, 256)               0         \n",
      "                                                                 \n",
      " dense_4 (Dense)             (None, 128)               32896     \n",
      "                                                                 \n",
      " dropout_3 (Dropout)         (None, 128)               0         \n",
      "                                                                 \n",
      " dense_5 (Dense)             (None, 1)                 129       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 58889217 (224.64 MB)\n",
      "Trainable params: 557569 (2.13 MB)\n",
      "Non-trainable params: 58331648 (222.52 MB)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "resnet_model = Sequential()\n",
    "\n",
    "resnet_model.add(resnet_conv)\n",
    "resnet_model.add(GlobalAveragePooling2D())\n",
    "resnet_model.add(Dense(256, activation = 'relu'))\n",
    "resnet_model.add(Dropout(0.2))\n",
    "resnet_model.add(Dense(128, activation = 'relu'))\n",
    "resnet_model.add(Dropout(0.2))\n",
    "resnet_model.add(Dense(1, activation = 'sigmoid'))\n",
    "\n",
    "resnet_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a401133a",
   "metadata": {},
   "outputs": [],
   "source": [
    "resnet_model.compile(optimizer = tf.keras.optimizers.legacy.Adam(learning_rate=0.00002),\n",
    "                     loss=tf.losses.BinaryCrossentropy(),\n",
    "                     metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "9360ab43",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/60\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-28 11:24:26.162971: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31/31 [==============================] - ETA: 0s - loss: 0.6912 - accuracy: 0.5807"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-28 11:25:14.150804: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31/31 [==============================] - 64s 2s/step - loss: 0.6912 - accuracy: 0.5807 - val_loss: 0.5443 - val_accuracy: 0.7863\n",
      "Epoch 2/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.5377 - accuracy: 0.7528 - val_loss: 0.4300 - val_accuracy: 0.8986\n",
      "Epoch 3/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.4410 - accuracy: 0.8361 - val_loss: 0.3626 - val_accuracy: 0.9123\n",
      "Epoch 4/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.3960 - accuracy: 0.8566 - val_loss: 0.3194 - val_accuracy: 0.9205\n",
      "Epoch 5/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.3498 - accuracy: 0.8818 - val_loss: 0.2884 - val_accuracy: 0.9233\n",
      "Epoch 6/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.3144 - accuracy: 0.8998 - val_loss: 0.2649 - val_accuracy: 0.9233\n",
      "Epoch 7/60\n",
      "31/31 [==============================] - 60s 2s/step - loss: 0.2953 - accuracy: 0.9065 - val_loss: 0.2454 - val_accuracy: 0.9315\n",
      "Epoch 8/60\n",
      "31/31 [==============================] - 57s 2s/step - loss: 0.2723 - accuracy: 0.9116 - val_loss: 0.2293 - val_accuracy: 0.9397\n",
      "Epoch 9/60\n",
      "31/31 [==============================] - 56s 2s/step - loss: 0.2546 - accuracy: 0.9173 - val_loss: 0.2160 - val_accuracy: 0.9397\n",
      "Epoch 10/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.2445 - accuracy: 0.9245 - val_loss: 0.2038 - val_accuracy: 0.9452\n",
      "Epoch 11/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.2330 - accuracy: 0.9209 - val_loss: 0.1928 - val_accuracy: 0.9479\n",
      "Epoch 12/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.2231 - accuracy: 0.9224 - val_loss: 0.1837 - val_accuracy: 0.9479\n",
      "Epoch 13/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.2082 - accuracy: 0.9347 - val_loss: 0.1756 - val_accuracy: 0.9534\n",
      "Epoch 14/60\n",
      "31/31 [==============================] - 57s 2s/step - loss: 0.2019 - accuracy: 0.9353 - val_loss: 0.1683 - val_accuracy: 0.9534\n",
      "Epoch 15/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.1942 - accuracy: 0.9383 - val_loss: 0.1613 - val_accuracy: 0.9534\n",
      "Epoch 16/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.1869 - accuracy: 0.9404 - val_loss: 0.1550 - val_accuracy: 0.9534\n",
      "Epoch 17/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.1768 - accuracy: 0.9358 - val_loss: 0.1490 - val_accuracy: 0.9534\n",
      "Epoch 18/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.1682 - accuracy: 0.9450 - val_loss: 0.1437 - val_accuracy: 0.9534\n",
      "Epoch 19/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.1637 - accuracy: 0.9435 - val_loss: 0.1387 - val_accuracy: 0.9589\n",
      "Epoch 20/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.1583 - accuracy: 0.9471 - val_loss: 0.1339 - val_accuracy: 0.9616\n",
      "Epoch 21/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.1471 - accuracy: 0.9568 - val_loss: 0.1296 - val_accuracy: 0.9644\n",
      "Epoch 22/60\n",
      "31/31 [==============================] - 63s 2s/step - loss: 0.1410 - accuracy: 0.9599 - val_loss: 0.1258 - val_accuracy: 0.9644\n",
      "Epoch 23/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.1443 - accuracy: 0.9558 - val_loss: 0.1223 - val_accuracy: 0.9671\n",
      "Epoch 24/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.1408 - accuracy: 0.9502 - val_loss: 0.1187 - val_accuracy: 0.9699\n",
      "Epoch 25/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.1325 - accuracy: 0.9615 - val_loss: 0.1157 - val_accuracy: 0.9699\n",
      "Epoch 26/60\n",
      "31/31 [==============================] - 58s 2s/step - loss: 0.1286 - accuracy: 0.9609 - val_loss: 0.1130 - val_accuracy: 0.9699\n",
      "Epoch 27/60\n",
      "31/31 [==============================] - 66s 2s/step - loss: 0.1258 - accuracy: 0.9604 - val_loss: 0.1098 - val_accuracy: 0.9726\n",
      "Epoch 28/60\n",
      "31/31 [==============================] - 60s 2s/step - loss: 0.1236 - accuracy: 0.9620 - val_loss: 0.1072 - val_accuracy: 0.9726\n",
      "Epoch 29/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.1187 - accuracy: 0.9620 - val_loss: 0.1050 - val_accuracy: 0.9726\n",
      "Epoch 30/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.1110 - accuracy: 0.9671 - val_loss: 0.1027 - val_accuracy: 0.9726\n",
      "Epoch 31/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.1082 - accuracy: 0.9697 - val_loss: 0.1005 - val_accuracy: 0.9726\n",
      "Epoch 32/60\n",
      "31/31 [==============================] - 56s 2s/step - loss: 0.1095 - accuracy: 0.9671 - val_loss: 0.0987 - val_accuracy: 0.9699\n",
      "Epoch 33/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.1047 - accuracy: 0.9687 - val_loss: 0.0970 - val_accuracy: 0.9726\n",
      "Epoch 34/60\n",
      "31/31 [==============================] - 59s 2s/step - loss: 0.0983 - accuracy: 0.9743 - val_loss: 0.0954 - val_accuracy: 0.9781\n",
      "Epoch 35/60\n",
      "31/31 [==============================] - 62s 2s/step - loss: 0.1009 - accuracy: 0.9681 - val_loss: 0.0936 - val_accuracy: 0.9753\n",
      "Epoch 36/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.0985 - accuracy: 0.9733 - val_loss: 0.0921 - val_accuracy: 0.9753\n",
      "Epoch 37/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.0963 - accuracy: 0.9707 - val_loss: 0.0905 - val_accuracy: 0.9753\n",
      "Epoch 38/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.0927 - accuracy: 0.9717 - val_loss: 0.0889 - val_accuracy: 0.9753\n",
      "Epoch 39/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0944 - accuracy: 0.9728 - val_loss: 0.0874 - val_accuracy: 0.9753\n",
      "Epoch 40/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0859 - accuracy: 0.9733 - val_loss: 0.0865 - val_accuracy: 0.9753\n",
      "Epoch 41/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0840 - accuracy: 0.9748 - val_loss: 0.0852 - val_accuracy: 0.9753\n",
      "Epoch 42/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0837 - accuracy: 0.9779 - val_loss: 0.0840 - val_accuracy: 0.9753\n",
      "Epoch 43/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.0808 - accuracy: 0.9764 - val_loss: 0.0831 - val_accuracy: 0.9753\n",
      "Epoch 44/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.0801 - accuracy: 0.9789 - val_loss: 0.0818 - val_accuracy: 0.9753\n",
      "Epoch 45/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.0802 - accuracy: 0.9748 - val_loss: 0.0810 - val_accuracy: 0.9753\n",
      "Epoch 46/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.0779 - accuracy: 0.9800 - val_loss: 0.0805 - val_accuracy: 0.9781\n",
      "Epoch 47/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0745 - accuracy: 0.9779 - val_loss: 0.0792 - val_accuracy: 0.9753\n",
      "Epoch 48/60\n",
      "31/31 [==============================] - 56s 2s/step - loss: 0.0753 - accuracy: 0.9794 - val_loss: 0.0781 - val_accuracy: 0.9781\n",
      "Epoch 49/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.0719 - accuracy: 0.9779 - val_loss: 0.0774 - val_accuracy: 0.9781\n",
      "Epoch 50/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0716 - accuracy: 0.9805 - val_loss: 0.0768 - val_accuracy: 0.9808\n",
      "Epoch 51/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0708 - accuracy: 0.9820 - val_loss: 0.0761 - val_accuracy: 0.9808\n",
      "Epoch 52/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.0689 - accuracy: 0.9789 - val_loss: 0.0751 - val_accuracy: 0.9808\n",
      "Epoch 53/60\n",
      "31/31 [==============================] - 53s 2s/step - loss: 0.0637 - accuracy: 0.9830 - val_loss: 0.0745 - val_accuracy: 0.9808\n",
      "Epoch 54/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0641 - accuracy: 0.9846 - val_loss: 0.0740 - val_accuracy: 0.9808\n",
      "Epoch 55/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0609 - accuracy: 0.9841 - val_loss: 0.0732 - val_accuracy: 0.9808\n",
      "Epoch 56/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0610 - accuracy: 0.9805 - val_loss: 0.0725 - val_accuracy: 0.9808\n",
      "Epoch 57/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0597 - accuracy: 0.9820 - val_loss: 0.0719 - val_accuracy: 0.9808\n",
      "Epoch 58/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.0589 - accuracy: 0.9836 - val_loss: 0.0720 - val_accuracy: 0.9808\n",
      "Epoch 59/60\n",
      "31/31 [==============================] - 54s 2s/step - loss: 0.0618 - accuracy: 0.9851 - val_loss: 0.0715 - val_accuracy: 0.9808\n",
      "Epoch 60/60\n",
      "31/31 [==============================] - 55s 2s/step - loss: 0.0585 - accuracy: 0.9851 - val_loss: 0.0708 - val_accuracy: 0.9808\n"
     ]
    }
   ],
   "source": [
    "history_resnet = resnet_model.fit(train, epochs=60, validation_data=dev, callbacks=[tensorboard_callback, earlystop_callback])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ab618822",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "loss_acc_fig(history_resnet)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b347df54",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-28 12:23:30.911837: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 4s 566ms/step\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-07-28 12:23:35.046511: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 6s 2s/step\n",
      "tf.Tensor(0.984127, shape=(), dtype=float32) tf.Tensor(1.0, shape=(), dtype=float32) tf.Tensor(0.9918033, shape=(), dtype=float32)\n"
     ]
    }
   ],
   "source": [
    "ppv_tpr_acc_test(resnet_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "0ce81248",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 1s 760ms/step\n",
      "2/2 [==============================] - 2s 787ms/step\n",
      "[[59  1]\n",
      " [ 0 62]]\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "confusion_mat(resnet_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8806bb74",
   "metadata": {},
   "source": [
    "### Inceptionv3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b06aa2fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "incept_conv = InceptionV3(weights = 'imagenet', include_top = False, input_shape=(224,224,3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d39af356",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"inception_v3\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                Output Shape                 Param #   Connected to                  \n",
      "==================================================================================================\n",
      " input_1 (InputLayer)        [(None, 224, 224, 3)]        0         []                            \n",
      "                                                                                                  \n",
      " conv2d (Conv2D)             (None, 111, 111, 32)         864       ['input_1[0][0]']             \n",
      "                                                                                                  \n",
      " batch_normalization (Batch  (None, 111, 111, 32)         96        ['conv2d[0][0]']              \n",
      " Normalization)                                                                                   \n",
      "                                                                                                  \n",
      " activation (Activation)     (None, 111, 111, 32)         0         ['batch_normalization[0][0]'] \n",
      "                                                                                                  \n",
      " conv2d_1 (Conv2D)           (None, 109, 109, 32)         9216      ['activation[0][0]']          \n",
      "                                                                                                  \n",
      " batch_normalization_1 (Bat  (None, 109, 109, 32)         96        ['conv2d_1[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " activation_1 (Activation)   (None, 109, 109, 32)         0         ['batch_normalization_1[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " conv2d_2 (Conv2D)           (None, 109, 109, 64)         18432     ['activation_1[0][0]']        \n",
      "                                                                                                  \n",
      " batch_normalization_2 (Bat  (None, 109, 109, 64)         192       ['conv2d_2[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " activation_2 (Activation)   (None, 109, 109, 64)         0         ['batch_normalization_2[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " max_pooling2d (MaxPooling2  (None, 54, 54, 64)           0         ['activation_2[0][0]']        \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " conv2d_3 (Conv2D)           (None, 54, 54, 80)           5120      ['max_pooling2d[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_3 (Bat  (None, 54, 54, 80)           240       ['conv2d_3[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " activation_3 (Activation)   (None, 54, 54, 80)           0         ['batch_normalization_3[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " conv2d_4 (Conv2D)           (None, 52, 52, 192)          138240    ['activation_3[0][0]']        \n",
      "                                                                                                  \n",
      " batch_normalization_4 (Bat  (None, 52, 52, 192)          576       ['conv2d_4[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " activation_4 (Activation)   (None, 52, 52, 192)          0         ['batch_normalization_4[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " max_pooling2d_1 (MaxPoolin  (None, 25, 25, 192)          0         ['activation_4[0][0]']        \n",
      " g2D)                                                                                             \n",
      "                                                                                                  \n",
      " conv2d_8 (Conv2D)           (None, 25, 25, 64)           12288     ['max_pooling2d_1[0][0]']     \n",
      "                                                                                                  \n",
      " batch_normalization_8 (Bat  (None, 25, 25, 64)           192       ['conv2d_8[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " activation_8 (Activation)   (None, 25, 25, 64)           0         ['batch_normalization_8[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " conv2d_6 (Conv2D)           (None, 25, 25, 48)           9216      ['max_pooling2d_1[0][0]']     \n",
      "                                                                                                  \n",
      " conv2d_9 (Conv2D)           (None, 25, 25, 96)           55296     ['activation_8[0][0]']        \n",
      "                                                                                                  \n",
      " batch_normalization_6 (Bat  (None, 25, 25, 48)           144       ['conv2d_6[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " batch_normalization_9 (Bat  (None, 25, 25, 96)           288       ['conv2d_9[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " activation_6 (Activation)   (None, 25, 25, 48)           0         ['batch_normalization_6[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " activation_9 (Activation)   (None, 25, 25, 96)           0         ['batch_normalization_9[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " average_pooling2d (Average  (None, 25, 25, 192)          0         ['max_pooling2d_1[0][0]']     \n",
      " Pooling2D)                                                                                       \n",
      "                                                                                                  \n",
      " conv2d_5 (Conv2D)           (None, 25, 25, 64)           12288     ['max_pooling2d_1[0][0]']     \n",
      "                                                                                                  \n",
      " conv2d_7 (Conv2D)           (None, 25, 25, 64)           76800     ['activation_6[0][0]']        \n",
      "                                                                                                  \n",
      " conv2d_10 (Conv2D)          (None, 25, 25, 96)           82944     ['activation_9[0][0]']        \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv2d_11 (Conv2D)          (None, 25, 25, 32)           6144      ['average_pooling2d[0][0]']   \n",
      "                                                                                                  \n",
      " batch_normalization_5 (Bat  (None, 25, 25, 64)           192       ['conv2d_5[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " batch_normalization_7 (Bat  (None, 25, 25, 64)           192       ['conv2d_7[0][0]']            \n",
      " chNormalization)                                                                                 \n",
      "                                                                                                  \n",
      " batch_normalization_10 (Ba  (None, 25, 25, 96)           288       ['conv2d_10[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_11 (Ba  (None, 25, 25, 32)           96        ['conv2d_11[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_5 (Activation)   (None, 25, 25, 64)           0         ['batch_normalization_5[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " activation_7 (Activation)   (None, 25, 25, 64)           0         ['batch_normalization_7[0][0]'\n",
      "                                                                    ]                             \n",
      "                                                                                                  \n",
      " activation_10 (Activation)  (None, 25, 25, 96)           0         ['batch_normalization_10[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_11 (Activation)  (None, 25, 25, 32)           0         ['batch_normalization_11[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed0 (Concatenate)        (None, 25, 25, 256)          0         ['activation_5[0][0]',        \n",
      "                                                                     'activation_7[0][0]',        \n",
      "                                                                     'activation_10[0][0]',       \n",
      "                                                                     'activation_11[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_15 (Conv2D)          (None, 25, 25, 64)           16384     ['mixed0[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_15 (Ba  (None, 25, 25, 64)           192       ['conv2d_15[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_15 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_15[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_13 (Conv2D)          (None, 25, 25, 48)           12288     ['mixed0[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_16 (Conv2D)          (None, 25, 25, 96)           55296     ['activation_15[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_13 (Ba  (None, 25, 25, 48)           144       ['conv2d_13[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_16 (Ba  (None, 25, 25, 96)           288       ['conv2d_16[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_13 (Activation)  (None, 25, 25, 48)           0         ['batch_normalization_13[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_16 (Activation)  (None, 25, 25, 96)           0         ['batch_normalization_16[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " average_pooling2d_1 (Avera  (None, 25, 25, 256)          0         ['mixed0[0][0]']              \n",
      " gePooling2D)                                                                                     \n",
      "                                                                                                  \n",
      " conv2d_12 (Conv2D)          (None, 25, 25, 64)           16384     ['mixed0[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_14 (Conv2D)          (None, 25, 25, 64)           76800     ['activation_13[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_17 (Conv2D)          (None, 25, 25, 96)           82944     ['activation_16[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_18 (Conv2D)          (None, 25, 25, 64)           16384     ['average_pooling2d_1[0][0]'] \n",
      "                                                                                                  \n",
      " batch_normalization_12 (Ba  (None, 25, 25, 64)           192       ['conv2d_12[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_14 (Ba  (None, 25, 25, 64)           192       ['conv2d_14[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_17 (Ba  (None, 25, 25, 96)           288       ['conv2d_17[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_18 (Ba  (None, 25, 25, 64)           192       ['conv2d_18[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_12 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_12[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_14 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_14[0][0]\n",
      "                                                                    ']                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " activation_17 (Activation)  (None, 25, 25, 96)           0         ['batch_normalization_17[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_18 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_18[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed1 (Concatenate)        (None, 25, 25, 288)          0         ['activation_12[0][0]',       \n",
      "                                                                     'activation_14[0][0]',       \n",
      "                                                                     'activation_17[0][0]',       \n",
      "                                                                     'activation_18[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_22 (Conv2D)          (None, 25, 25, 64)           18432     ['mixed1[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_22 (Ba  (None, 25, 25, 64)           192       ['conv2d_22[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_22 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_22[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_20 (Conv2D)          (None, 25, 25, 48)           13824     ['mixed1[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_23 (Conv2D)          (None, 25, 25, 96)           55296     ['activation_22[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_20 (Ba  (None, 25, 25, 48)           144       ['conv2d_20[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_23 (Ba  (None, 25, 25, 96)           288       ['conv2d_23[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_20 (Activation)  (None, 25, 25, 48)           0         ['batch_normalization_20[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_23 (Activation)  (None, 25, 25, 96)           0         ['batch_normalization_23[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " average_pooling2d_2 (Avera  (None, 25, 25, 288)          0         ['mixed1[0][0]']              \n",
      " gePooling2D)                                                                                     \n",
      "                                                                                                  \n",
      " conv2d_19 (Conv2D)          (None, 25, 25, 64)           18432     ['mixed1[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_21 (Conv2D)          (None, 25, 25, 64)           76800     ['activation_20[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_24 (Conv2D)          (None, 25, 25, 96)           82944     ['activation_23[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_25 (Conv2D)          (None, 25, 25, 64)           18432     ['average_pooling2d_2[0][0]'] \n",
      "                                                                                                  \n",
      " batch_normalization_19 (Ba  (None, 25, 25, 64)           192       ['conv2d_19[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_21 (Ba  (None, 25, 25, 64)           192       ['conv2d_21[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_24 (Ba  (None, 25, 25, 96)           288       ['conv2d_24[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_25 (Ba  (None, 25, 25, 64)           192       ['conv2d_25[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_19 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_19[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_21 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_21[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_24 (Activation)  (None, 25, 25, 96)           0         ['batch_normalization_24[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_25 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_25[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed2 (Concatenate)        (None, 25, 25, 288)          0         ['activation_19[0][0]',       \n",
      "                                                                     'activation_21[0][0]',       \n",
      "                                                                     'activation_24[0][0]',       \n",
      "                                                                     'activation_25[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_27 (Conv2D)          (None, 25, 25, 64)           18432     ['mixed2[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_27 (Ba  (None, 25, 25, 64)           192       ['conv2d_27[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_27 (Activation)  (None, 25, 25, 64)           0         ['batch_normalization_27[0][0]\n",
      "                                                                    ']                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " conv2d_28 (Conv2D)          (None, 25, 25, 96)           55296     ['activation_27[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_28 (Ba  (None, 25, 25, 96)           288       ['conv2d_28[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_28 (Activation)  (None, 25, 25, 96)           0         ['batch_normalization_28[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_26 (Conv2D)          (None, 12, 12, 384)          995328    ['mixed2[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_29 (Conv2D)          (None, 12, 12, 96)           82944     ['activation_28[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_26 (Ba  (None, 12, 12, 384)          1152      ['conv2d_26[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_29 (Ba  (None, 12, 12, 96)           288       ['conv2d_29[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_26 (Activation)  (None, 12, 12, 384)          0         ['batch_normalization_26[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_29 (Activation)  (None, 12, 12, 96)           0         ['batch_normalization_29[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " max_pooling2d_2 (MaxPoolin  (None, 12, 12, 288)          0         ['mixed2[0][0]']              \n",
      " g2D)                                                                                             \n",
      "                                                                                                  \n",
      " mixed3 (Concatenate)        (None, 12, 12, 768)          0         ['activation_26[0][0]',       \n",
      "                                                                     'activation_29[0][0]',       \n",
      "                                                                     'max_pooling2d_2[0][0]']     \n",
      "                                                                                                  \n",
      " conv2d_34 (Conv2D)          (None, 12, 12, 128)          98304     ['mixed3[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_34 (Ba  (None, 12, 12, 128)          384       ['conv2d_34[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_34 (Activation)  (None, 12, 12, 128)          0         ['batch_normalization_34[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_35 (Conv2D)          (None, 12, 12, 128)          114688    ['activation_34[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_35 (Ba  (None, 12, 12, 128)          384       ['conv2d_35[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_35 (Activation)  (None, 12, 12, 128)          0         ['batch_normalization_35[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_31 (Conv2D)          (None, 12, 12, 128)          98304     ['mixed3[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_36 (Conv2D)          (None, 12, 12, 128)          114688    ['activation_35[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_31 (Ba  (None, 12, 12, 128)          384       ['conv2d_31[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_36 (Ba  (None, 12, 12, 128)          384       ['conv2d_36[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_31 (Activation)  (None, 12, 12, 128)          0         ['batch_normalization_31[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_36 (Activation)  (None, 12, 12, 128)          0         ['batch_normalization_36[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_32 (Conv2D)          (None, 12, 12, 128)          114688    ['activation_31[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_37 (Conv2D)          (None, 12, 12, 128)          114688    ['activation_36[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_32 (Ba  (None, 12, 12, 128)          384       ['conv2d_32[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_37 (Ba  (None, 12, 12, 128)          384       ['conv2d_37[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_32 (Activation)  (None, 12, 12, 128)          0         ['batch_normalization_32[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_37 (Activation)  (None, 12, 12, 128)          0         ['batch_normalization_37[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " average_pooling2d_3 (Avera  (None, 12, 12, 768)          0         ['mixed3[0][0]']              \n",
      " gePooling2D)                                                                                     \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " conv2d_30 (Conv2D)          (None, 12, 12, 192)          147456    ['mixed3[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_33 (Conv2D)          (None, 12, 12, 192)          172032    ['activation_32[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_38 (Conv2D)          (None, 12, 12, 192)          172032    ['activation_37[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_39 (Conv2D)          (None, 12, 12, 192)          147456    ['average_pooling2d_3[0][0]'] \n",
      "                                                                                                  \n",
      " batch_normalization_30 (Ba  (None, 12, 12, 192)          576       ['conv2d_30[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_33 (Ba  (None, 12, 12, 192)          576       ['conv2d_33[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_38 (Ba  (None, 12, 12, 192)          576       ['conv2d_38[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_39 (Ba  (None, 12, 12, 192)          576       ['conv2d_39[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_30 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_30[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_33 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_33[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_38 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_38[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_39 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_39[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed4 (Concatenate)        (None, 12, 12, 768)          0         ['activation_30[0][0]',       \n",
      "                                                                     'activation_33[0][0]',       \n",
      "                                                                     'activation_38[0][0]',       \n",
      "                                                                     'activation_39[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_44 (Conv2D)          (None, 12, 12, 160)          122880    ['mixed4[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_44 (Ba  (None, 12, 12, 160)          480       ['conv2d_44[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_44 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_44[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_45 (Conv2D)          (None, 12, 12, 160)          179200    ['activation_44[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_45 (Ba  (None, 12, 12, 160)          480       ['conv2d_45[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_45 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_45[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_41 (Conv2D)          (None, 12, 12, 160)          122880    ['mixed4[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_46 (Conv2D)          (None, 12, 12, 160)          179200    ['activation_45[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_41 (Ba  (None, 12, 12, 160)          480       ['conv2d_41[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_46 (Ba  (None, 12, 12, 160)          480       ['conv2d_46[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_41 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_41[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_46 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_46[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_42 (Conv2D)          (None, 12, 12, 160)          179200    ['activation_41[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_47 (Conv2D)          (None, 12, 12, 160)          179200    ['activation_46[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_42 (Ba  (None, 12, 12, 160)          480       ['conv2d_42[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_47 (Ba  (None, 12, 12, 160)          480       ['conv2d_47[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_42 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_42[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_47 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_47[0][0]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " average_pooling2d_4 (Avera  (None, 12, 12, 768)          0         ['mixed4[0][0]']              \n",
      " gePooling2D)                                                                                     \n",
      "                                                                                                  \n",
      " conv2d_40 (Conv2D)          (None, 12, 12, 192)          147456    ['mixed4[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_43 (Conv2D)          (None, 12, 12, 192)          215040    ['activation_42[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_48 (Conv2D)          (None, 12, 12, 192)          215040    ['activation_47[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_49 (Conv2D)          (None, 12, 12, 192)          147456    ['average_pooling2d_4[0][0]'] \n",
      "                                                                                                  \n",
      " batch_normalization_40 (Ba  (None, 12, 12, 192)          576       ['conv2d_40[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_43 (Ba  (None, 12, 12, 192)          576       ['conv2d_43[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_48 (Ba  (None, 12, 12, 192)          576       ['conv2d_48[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_49 (Ba  (None, 12, 12, 192)          576       ['conv2d_49[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_40 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_40[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_43 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_43[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_48 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_48[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_49 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_49[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed5 (Concatenate)        (None, 12, 12, 768)          0         ['activation_40[0][0]',       \n",
      "                                                                     'activation_43[0][0]',       \n",
      "                                                                     'activation_48[0][0]',       \n",
      "                                                                     'activation_49[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_54 (Conv2D)          (None, 12, 12, 160)          122880    ['mixed5[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_54 (Ba  (None, 12, 12, 160)          480       ['conv2d_54[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_54 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_54[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_55 (Conv2D)          (None, 12, 12, 160)          179200    ['activation_54[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_55 (Ba  (None, 12, 12, 160)          480       ['conv2d_55[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_55 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_55[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_51 (Conv2D)          (None, 12, 12, 160)          122880    ['mixed5[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_56 (Conv2D)          (None, 12, 12, 160)          179200    ['activation_55[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_51 (Ba  (None, 12, 12, 160)          480       ['conv2d_51[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_56 (Ba  (None, 12, 12, 160)          480       ['conv2d_56[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_51 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_51[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_56 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_56[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_52 (Conv2D)          (None, 12, 12, 160)          179200    ['activation_51[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_57 (Conv2D)          (None, 12, 12, 160)          179200    ['activation_56[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_52 (Ba  (None, 12, 12, 160)          480       ['conv2d_52[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_57 (Ba  (None, 12, 12, 160)          480       ['conv2d_57[0][0]']           \n",
      " tchNormalization)                                                                                \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " activation_52 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_52[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_57 (Activation)  (None, 12, 12, 160)          0         ['batch_normalization_57[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " average_pooling2d_5 (Avera  (None, 12, 12, 768)          0         ['mixed5[0][0]']              \n",
      " gePooling2D)                                                                                     \n",
      "                                                                                                  \n",
      " conv2d_50 (Conv2D)          (None, 12, 12, 192)          147456    ['mixed5[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_53 (Conv2D)          (None, 12, 12, 192)          215040    ['activation_52[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_58 (Conv2D)          (None, 12, 12, 192)          215040    ['activation_57[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_59 (Conv2D)          (None, 12, 12, 192)          147456    ['average_pooling2d_5[0][0]'] \n",
      "                                                                                                  \n",
      " batch_normalization_50 (Ba  (None, 12, 12, 192)          576       ['conv2d_50[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_53 (Ba  (None, 12, 12, 192)          576       ['conv2d_53[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_58 (Ba  (None, 12, 12, 192)          576       ['conv2d_58[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_59 (Ba  (None, 12, 12, 192)          576       ['conv2d_59[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_50 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_50[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_53 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_53[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_58 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_58[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_59 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_59[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed6 (Concatenate)        (None, 12, 12, 768)          0         ['activation_50[0][0]',       \n",
      "                                                                     'activation_53[0][0]',       \n",
      "                                                                     'activation_58[0][0]',       \n",
      "                                                                     'activation_59[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_64 (Conv2D)          (None, 12, 12, 192)          147456    ['mixed6[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_64 (Ba  (None, 12, 12, 192)          576       ['conv2d_64[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_64 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_64[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_65 (Conv2D)          (None, 12, 12, 192)          258048    ['activation_64[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_65 (Ba  (None, 12, 12, 192)          576       ['conv2d_65[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_65 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_65[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_61 (Conv2D)          (None, 12, 12, 192)          147456    ['mixed6[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_66 (Conv2D)          (None, 12, 12, 192)          258048    ['activation_65[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_61 (Ba  (None, 12, 12, 192)          576       ['conv2d_61[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_66 (Ba  (None, 12, 12, 192)          576       ['conv2d_66[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_61 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_61[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_66 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_66[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_62 (Conv2D)          (None, 12, 12, 192)          258048    ['activation_61[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_67 (Conv2D)          (None, 12, 12, 192)          258048    ['activation_66[0][0]']       \n",
      "                                                                                                  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " batch_normalization_62 (Ba  (None, 12, 12, 192)          576       ['conv2d_62[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_67 (Ba  (None, 12, 12, 192)          576       ['conv2d_67[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_62 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_62[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_67 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_67[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " average_pooling2d_6 (Avera  (None, 12, 12, 768)          0         ['mixed6[0][0]']              \n",
      " gePooling2D)                                                                                     \n",
      "                                                                                                  \n",
      " conv2d_60 (Conv2D)          (None, 12, 12, 192)          147456    ['mixed6[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_63 (Conv2D)          (None, 12, 12, 192)          258048    ['activation_62[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_68 (Conv2D)          (None, 12, 12, 192)          258048    ['activation_67[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_69 (Conv2D)          (None, 12, 12, 192)          147456    ['average_pooling2d_6[0][0]'] \n",
      "                                                                                                  \n",
      " batch_normalization_60 (Ba  (None, 12, 12, 192)          576       ['conv2d_60[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_63 (Ba  (None, 12, 12, 192)          576       ['conv2d_63[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_68 (Ba  (None, 12, 12, 192)          576       ['conv2d_68[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_69 (Ba  (None, 12, 12, 192)          576       ['conv2d_69[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_60 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_60[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_63 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_63[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_68 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_68[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_69 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_69[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed7 (Concatenate)        (None, 12, 12, 768)          0         ['activation_60[0][0]',       \n",
      "                                                                     'activation_63[0][0]',       \n",
      "                                                                     'activation_68[0][0]',       \n",
      "                                                                     'activation_69[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_72 (Conv2D)          (None, 12, 12, 192)          147456    ['mixed7[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_72 (Ba  (None, 12, 12, 192)          576       ['conv2d_72[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_72 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_72[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_73 (Conv2D)          (None, 12, 12, 192)          258048    ['activation_72[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_73 (Ba  (None, 12, 12, 192)          576       ['conv2d_73[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_73 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_73[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_70 (Conv2D)          (None, 12, 12, 192)          147456    ['mixed7[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_74 (Conv2D)          (None, 12, 12, 192)          258048    ['activation_73[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_70 (Ba  (None, 12, 12, 192)          576       ['conv2d_70[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_74 (Ba  (None, 12, 12, 192)          576       ['conv2d_74[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_70 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_70[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_74 (Activation)  (None, 12, 12, 192)          0         ['batch_normalization_74[0][0]\n",
      "                                                                    ']                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " conv2d_71 (Conv2D)          (None, 5, 5, 320)            552960    ['activation_70[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_75 (Conv2D)          (None, 5, 5, 192)            331776    ['activation_74[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_71 (Ba  (None, 5, 5, 320)            960       ['conv2d_71[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_75 (Ba  (None, 5, 5, 192)            576       ['conv2d_75[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_71 (Activation)  (None, 5, 5, 320)            0         ['batch_normalization_71[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_75 (Activation)  (None, 5, 5, 192)            0         ['batch_normalization_75[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " max_pooling2d_3 (MaxPoolin  (None, 5, 5, 768)            0         ['mixed7[0][0]']              \n",
      " g2D)                                                                                             \n",
      "                                                                                                  \n",
      " mixed8 (Concatenate)        (None, 5, 5, 1280)           0         ['activation_71[0][0]',       \n",
      "                                                                     'activation_75[0][0]',       \n",
      "                                                                     'max_pooling2d_3[0][0]']     \n",
      "                                                                                                  \n",
      " conv2d_80 (Conv2D)          (None, 5, 5, 448)            573440    ['mixed8[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_80 (Ba  (None, 5, 5, 448)            1344      ['conv2d_80[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_80 (Activation)  (None, 5, 5, 448)            0         ['batch_normalization_80[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_77 (Conv2D)          (None, 5, 5, 384)            491520    ['mixed8[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_81 (Conv2D)          (None, 5, 5, 384)            1548288   ['activation_80[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_77 (Ba  (None, 5, 5, 384)            1152      ['conv2d_77[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_81 (Ba  (None, 5, 5, 384)            1152      ['conv2d_81[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_77 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_77[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_81 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_81[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_78 (Conv2D)          (None, 5, 5, 384)            442368    ['activation_77[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_79 (Conv2D)          (None, 5, 5, 384)            442368    ['activation_77[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_82 (Conv2D)          (None, 5, 5, 384)            442368    ['activation_81[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_83 (Conv2D)          (None, 5, 5, 384)            442368    ['activation_81[0][0]']       \n",
      "                                                                                                  \n",
      " average_pooling2d_7 (Avera  (None, 5, 5, 1280)           0         ['mixed8[0][0]']              \n",
      " gePooling2D)                                                                                     \n",
      "                                                                                                  \n",
      " conv2d_76 (Conv2D)          (None, 5, 5, 320)            409600    ['mixed8[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_78 (Ba  (None, 5, 5, 384)            1152      ['conv2d_78[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_79 (Ba  (None, 5, 5, 384)            1152      ['conv2d_79[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_82 (Ba  (None, 5, 5, 384)            1152      ['conv2d_82[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_83 (Ba  (None, 5, 5, 384)            1152      ['conv2d_83[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv2d_84 (Conv2D)          (None, 5, 5, 192)            245760    ['average_pooling2d_7[0][0]'] \n",
      "                                                                                                  \n",
      " batch_normalization_76 (Ba  (None, 5, 5, 320)            960       ['conv2d_76[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_78 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_78[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_79 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_79[0][0]\n",
      "                                                                    ']                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " activation_82 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_82[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_83 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_83[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " batch_normalization_84 (Ba  (None, 5, 5, 192)            576       ['conv2d_84[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_76 (Activation)  (None, 5, 5, 320)            0         ['batch_normalization_76[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed9_0 (Concatenate)      (None, 5, 5, 768)            0         ['activation_78[0][0]',       \n",
      "                                                                     'activation_79[0][0]']       \n",
      "                                                                                                  \n",
      " concatenate (Concatenate)   (None, 5, 5, 768)            0         ['activation_82[0][0]',       \n",
      "                                                                     'activation_83[0][0]']       \n",
      "                                                                                                  \n",
      " activation_84 (Activation)  (None, 5, 5, 192)            0         ['batch_normalization_84[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed9 (Concatenate)        (None, 5, 5, 2048)           0         ['activation_76[0][0]',       \n",
      "                                                                     'mixed9_0[0][0]',            \n",
      "                                                                     'concatenate[0][0]',         \n",
      "                                                                     'activation_84[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_89 (Conv2D)          (None, 5, 5, 448)            917504    ['mixed9[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_89 (Ba  (None, 5, 5, 448)            1344      ['conv2d_89[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_89 (Activation)  (None, 5, 5, 448)            0         ['batch_normalization_89[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_86 (Conv2D)          (None, 5, 5, 384)            786432    ['mixed9[0][0]']              \n",
      "                                                                                                  \n",
      " conv2d_90 (Conv2D)          (None, 5, 5, 384)            1548288   ['activation_89[0][0]']       \n",
      "                                                                                                  \n",
      " batch_normalization_86 (Ba  (None, 5, 5, 384)            1152      ['conv2d_86[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_90 (Ba  (None, 5, 5, 384)            1152      ['conv2d_90[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_86 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_86[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_90 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_90[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " conv2d_87 (Conv2D)          (None, 5, 5, 384)            442368    ['activation_86[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_88 (Conv2D)          (None, 5, 5, 384)            442368    ['activation_86[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_91 (Conv2D)          (None, 5, 5, 384)            442368    ['activation_90[0][0]']       \n",
      "                                                                                                  \n",
      " conv2d_92 (Conv2D)          (None, 5, 5, 384)            442368    ['activation_90[0][0]']       \n",
      "                                                                                                  \n",
      " average_pooling2d_8 (Avera  (None, 5, 5, 2048)           0         ['mixed9[0][0]']              \n",
      " gePooling2D)                                                                                     \n",
      "                                                                                                  \n",
      " conv2d_85 (Conv2D)          (None, 5, 5, 320)            655360    ['mixed9[0][0]']              \n",
      "                                                                                                  \n",
      " batch_normalization_87 (Ba  (None, 5, 5, 384)            1152      ['conv2d_87[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_88 (Ba  (None, 5, 5, 384)            1152      ['conv2d_88[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_91 (Ba  (None, 5, 5, 384)            1152      ['conv2d_91[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " batch_normalization_92 (Ba  (None, 5, 5, 384)            1152      ['conv2d_92[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " conv2d_93 (Conv2D)          (None, 5, 5, 192)            393216    ['average_pooling2d_8[0][0]'] \n",
      "                                                                                                  \n",
      " batch_normalization_85 (Ba  (None, 5, 5, 320)            960       ['conv2d_85[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_87 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_87[0][0]\n",
      "                                                                    ']                            \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                                                                  \n",
      " activation_88 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_88[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_91 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_91[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " activation_92 (Activation)  (None, 5, 5, 384)            0         ['batch_normalization_92[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " batch_normalization_93 (Ba  (None, 5, 5, 192)            576       ['conv2d_93[0][0]']           \n",
      " tchNormalization)                                                                                \n",
      "                                                                                                  \n",
      " activation_85 (Activation)  (None, 5, 5, 320)            0         ['batch_normalization_85[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed9_1 (Concatenate)      (None, 5, 5, 768)            0         ['activation_87[0][0]',       \n",
      "                                                                     'activation_88[0][0]']       \n",
      "                                                                                                  \n",
      " concatenate_1 (Concatenate  (None, 5, 5, 768)            0         ['activation_91[0][0]',       \n",
      " )                                                                   'activation_92[0][0]']       \n",
      "                                                                                                  \n",
      " activation_93 (Activation)  (None, 5, 5, 192)            0         ['batch_normalization_93[0][0]\n",
      "                                                                    ']                            \n",
      "                                                                                                  \n",
      " mixed10 (Concatenate)       (None, 5, 5, 2048)           0         ['activation_85[0][0]',       \n",
      "                                                                     'mixed9_1[0][0]',            \n",
      "                                                                     'concatenate_1[0][0]',       \n",
      "                                                                     'activation_93[0][0]']       \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 21802784 (83.17 MB)\n",
      "Trainable params: 0 (0.00 Byte)\n",
      "Non-trainable params: 21802784 (83.17 MB)\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "incept_conv.trainable = False\n",
    "incept_conv.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "851823a7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_1\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " inception_v3 (Functional)   (None, 5, 5, 2048)        21802784  \n",
      "                                                                 \n",
      " global_average_pooling2d_1  (None, 2048)              0         \n",
      "  (GlobalAveragePooling2D)                                       \n",
      "                                                                 \n",
      " dense_3 (Dense)             (None, 256)               524544    \n",
      "                                                                 \n",
      " dropout_2 (Dropout)         (None, 256)               0         \n",
      "                                                                 \n",
      " dense_4 (Dense)             (None, 128)               32896     \n",
      "                                                                 \n",
      " dropout_3 (Dropout)         (None, 128)               0         \n",
      "                                                                 \n",
      " dense_5 (Dense)             (None, 1)                 129       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 22360353 (85.30 MB)\n",
      "Trainable params: 557569 (2.13 MB)\n",
      "Non-trainable params: 21802784 (83.17 MB)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "incept_model = Sequential()\n",
    "\n",
    "incept_model.add(incept_conv)\n",
    "incept_model.add(GlobalAveragePooling2D())\n",
    "incept_model.add(Dense(256, activation = 'relu'))\n",
    "incept_model.add(Dropout(0.3))\n",
    "incept_model.add(Dense(128, activation = 'relu'))\n",
    "incept_model.add(Dropout(0.3))\n",
    "incept_model.add(Dense(1, activation = 'sigmoid'))\n",
    "\n",
    "incept_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7c8b0229",
   "metadata": {},
   "outputs": [],
   "source": [
    "incept_model.compile(optimizer = tf.keras.optimizers.legacy.Adam(learning_rate=0.00002),\n",
    "                     loss=tf.losses.BinaryCrossentropy(),\n",
    "                     metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "990897ba",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/40\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-08-03 14:48:06.182132: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31/31 [==============================] - ETA: 0s - loss: 0.5704 - accuracy: 0.6942"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-08-03 14:48:22.049886: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31/31 [==============================] - 23s 589ms/step - loss: 0.5704 - accuracy: 0.6942 - val_loss: 0.3855 - val_accuracy: 0.8575\n",
      "Epoch 2/40\n",
      "31/31 [==============================] - 17s 480ms/step - loss: 0.4015 - accuracy: 0.8222 - val_loss: 0.3001 - val_accuracy: 0.8685\n",
      "Epoch 3/40\n",
      "31/31 [==============================] - 17s 482ms/step - loss: 0.3427 - accuracy: 0.8582 - val_loss: 0.2557 - val_accuracy: 0.9041\n",
      "Epoch 4/40\n",
      "31/31 [==============================] - 17s 471ms/step - loss: 0.2998 - accuracy: 0.8762 - val_loss: 0.2238 - val_accuracy: 0.9288\n",
      "Epoch 5/40\n",
      "31/31 [==============================] - 17s 470ms/step - loss: 0.2594 - accuracy: 0.9126 - val_loss: 0.1985 - val_accuracy: 0.9452\n",
      "Epoch 6/40\n",
      "31/31 [==============================] - 17s 469ms/step - loss: 0.2425 - accuracy: 0.9106 - val_loss: 0.1801 - val_accuracy: 0.9534\n",
      "Epoch 7/40\n",
      "31/31 [==============================] - 17s 470ms/step - loss: 0.2244 - accuracy: 0.9178 - val_loss: 0.1670 - val_accuracy: 0.9507\n",
      "Epoch 8/40\n",
      "31/31 [==============================] - 17s 477ms/step - loss: 0.2169 - accuracy: 0.9245 - val_loss: 0.1548 - val_accuracy: 0.9534\n",
      "Epoch 9/40\n",
      "31/31 [==============================] - 17s 469ms/step - loss: 0.1987 - accuracy: 0.9255 - val_loss: 0.1441 - val_accuracy: 0.9644\n",
      "Epoch 10/40\n",
      "31/31 [==============================] - 16s 466ms/step - loss: 0.1827 - accuracy: 0.9353 - val_loss: 0.1367 - val_accuracy: 0.9616\n",
      "Epoch 11/40\n",
      "31/31 [==============================] - 16s 457ms/step - loss: 0.1730 - accuracy: 0.9373 - val_loss: 0.1298 - val_accuracy: 0.9644\n",
      "Epoch 12/40\n",
      "31/31 [==============================] - 17s 473ms/step - loss: 0.1633 - accuracy: 0.9435 - val_loss: 0.1233 - val_accuracy: 0.9699\n",
      "Epoch 13/40\n",
      "31/31 [==============================] - 17s 486ms/step - loss: 0.1516 - accuracy: 0.9471 - val_loss: 0.1178 - val_accuracy: 0.9726\n",
      "Epoch 14/40\n",
      "31/31 [==============================] - 17s 484ms/step - loss: 0.1506 - accuracy: 0.9476 - val_loss: 0.1141 - val_accuracy: 0.9699\n",
      "Epoch 15/40\n",
      "31/31 [==============================] - 17s 468ms/step - loss: 0.1428 - accuracy: 0.9532 - val_loss: 0.1097 - val_accuracy: 0.9699\n",
      "Epoch 16/40\n",
      "31/31 [==============================] - 16s 463ms/step - loss: 0.1384 - accuracy: 0.9548 - val_loss: 0.1053 - val_accuracy: 0.9781\n",
      "Epoch 17/40\n",
      "31/31 [==============================] - 16s 467ms/step - loss: 0.1325 - accuracy: 0.9558 - val_loss: 0.1045 - val_accuracy: 0.9753\n",
      "Epoch 18/40\n",
      "31/31 [==============================] - 17s 472ms/step - loss: 0.1233 - accuracy: 0.9594 - val_loss: 0.1002 - val_accuracy: 0.9781\n",
      "Epoch 19/40\n",
      "31/31 [==============================] - 17s 471ms/step - loss: 0.1186 - accuracy: 0.9589 - val_loss: 0.0982 - val_accuracy: 0.9781\n",
      "Epoch 20/40\n",
      "31/31 [==============================] - 17s 469ms/step - loss: 0.1150 - accuracy: 0.9604 - val_loss: 0.0970 - val_accuracy: 0.9753\n",
      "Epoch 21/40\n",
      "31/31 [==============================] - 17s 467ms/step - loss: 0.1115 - accuracy: 0.9656 - val_loss: 0.0934 - val_accuracy: 0.9781\n",
      "Epoch 22/40\n",
      "31/31 [==============================] - 17s 471ms/step - loss: 0.1103 - accuracy: 0.9640 - val_loss: 0.0907 - val_accuracy: 0.9781\n",
      "Epoch 23/40\n",
      "31/31 [==============================] - 17s 481ms/step - loss: 0.1079 - accuracy: 0.9625 - val_loss: 0.0888 - val_accuracy: 0.9781\n",
      "Epoch 24/40\n",
      "31/31 [==============================] - 16s 462ms/step - loss: 0.1032 - accuracy: 0.9645 - val_loss: 0.0872 - val_accuracy: 0.9781\n",
      "Epoch 25/40\n",
      "31/31 [==============================] - 17s 474ms/step - loss: 0.0981 - accuracy: 0.9697 - val_loss: 0.0873 - val_accuracy: 0.9753\n",
      "Epoch 26/40\n",
      "31/31 [==============================] - 17s 475ms/step - loss: 0.0976 - accuracy: 0.9676 - val_loss: 0.0853 - val_accuracy: 0.9753\n",
      "Epoch 27/40\n",
      "31/31 [==============================] - 16s 462ms/step - loss: 0.0929 - accuracy: 0.9702 - val_loss: 0.0832 - val_accuracy: 0.9781\n",
      "Epoch 28/40\n",
      "31/31 [==============================] - 17s 478ms/step - loss: 0.0884 - accuracy: 0.9723 - val_loss: 0.0806 - val_accuracy: 0.9781\n",
      "Epoch 29/40\n",
      "31/31 [==============================] - 16s 464ms/step - loss: 0.0886 - accuracy: 0.9692 - val_loss: 0.0808 - val_accuracy: 0.9781\n",
      "Epoch 30/40\n",
      "31/31 [==============================] - 17s 481ms/step - loss: 0.0894 - accuracy: 0.9692 - val_loss: 0.0789 - val_accuracy: 0.9781\n",
      "Epoch 31/40\n",
      "31/31 [==============================] - 16s 457ms/step - loss: 0.0847 - accuracy: 0.9728 - val_loss: 0.0794 - val_accuracy: 0.9753\n",
      "Epoch 32/40\n",
      "31/31 [==============================] - 17s 469ms/step - loss: 0.0822 - accuracy: 0.9733 - val_loss: 0.0788 - val_accuracy: 0.9753\n",
      "Epoch 33/40\n",
      "31/31 [==============================] - 17s 471ms/step - loss: 0.0771 - accuracy: 0.9774 - val_loss: 0.0778 - val_accuracy: 0.9753\n",
      "Epoch 34/40\n",
      "31/31 [==============================] - 17s 467ms/step - loss: 0.0791 - accuracy: 0.9748 - val_loss: 0.0788 - val_accuracy: 0.9753\n",
      "Epoch 35/40\n",
      "31/31 [==============================] - 17s 475ms/step - loss: 0.0724 - accuracy: 0.9805 - val_loss: 0.0752 - val_accuracy: 0.9753\n",
      "Epoch 36/40\n",
      "31/31 [==============================] - 17s 477ms/step - loss: 0.0774 - accuracy: 0.9769 - val_loss: 0.0735 - val_accuracy: 0.9781\n",
      "Epoch 37/40\n",
      "31/31 [==============================] - 17s 497ms/step - loss: 0.0699 - accuracy: 0.9820 - val_loss: 0.0729 - val_accuracy: 0.9781\n",
      "Epoch 38/40\n",
      "31/31 [==============================] - 17s 471ms/step - loss: 0.0659 - accuracy: 0.9825 - val_loss: 0.0718 - val_accuracy: 0.9781\n",
      "Epoch 39/40\n",
      "31/31 [==============================] - 17s 467ms/step - loss: 0.0678 - accuracy: 0.9789 - val_loss: 0.0731 - val_accuracy: 0.9781\n",
      "Epoch 40/40\n",
      "31/31 [==============================] - 16s 463ms/step - loss: 0.0660 - accuracy: 0.9825 - val_loss: 0.0712 - val_accuracy: 0.9781\n"
     ]
    }
   ],
   "source": [
    "history_incept = incept_model.fit(train, epochs=40, validation_data=dev, callbacks=[tensorboard_callback, earlystop_callback])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ab8f42bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "loss_acc_fig(history_incept)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "83a755d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-08-03 15:00:28.499738: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 2s 46ms/step\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-08-03 15:00:30.490043: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:114] Plugin optimizer for device_type GPU is enabled.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 2s 877ms/step\n",
      "tf.Tensor(0.9677419, shape=(), dtype=float32) tf.Tensor(0.9677419, shape=(), dtype=float32) tf.Tensor(0.9672131, shape=(), dtype=float32)\n"
     ]
    }
   ],
   "source": [
    "ppv_tpr_acc_test(incept_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e8122841",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 0s 137ms/step\n",
      "2/2 [==============================] - 0s 192ms/step\n",
      "[[58  2]\n",
      " [ 2 60]]\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "confusion_mat(incept_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81537603",
   "metadata": {},
   "source": [
    "### VGG16"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f3d56a58",
   "metadata": {},
   "outputs": [],
   "source": [
    "vgg_conv = VGG16(weights = 'imagenet', include_top = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "20ca2d9d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"vgg16\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " input_2 (InputLayer)        [(None, None, None, 3)]   0         \n",
      "                                                                 \n",
      " block1_conv1 (Conv2D)       (None, None, None, 64)    1792      \n",
      "                                                                 \n",
      " block1_conv2 (Conv2D)       (None, None, None, 64)    36928     \n",
      "                                                                 \n",
      " block1_pool (MaxPooling2D)  (None, None, None, 64)    0         \n",
      "                                                                 \n",
      " block2_conv1 (Conv2D)       (None, None, None, 128)   73856     \n",
      "                                                                 \n",
      " block2_conv2 (Conv2D)       (None, None, None, 128)   147584    \n",
      "                                                                 \n",
      " block2_pool (MaxPooling2D)  (None, None, None, 128)   0         \n",
      "                                                                 \n",
      " block3_conv1 (Conv2D)       (None, None, None, 256)   295168    \n",
      "                                                                 \n",
      " block3_conv2 (Conv2D)       (None, None, None, 256)   590080    \n",
      "                                                                 \n",
      " block3_conv3 (Conv2D)       (None, None, None, 256)   590080    \n",
      "                                                                 \n",
      " block3_pool (MaxPooling2D)  (None, None, None, 256)   0         \n",
      "                                                                 \n",
      " block4_conv1 (Conv2D)       (None, None, None, 512)   1180160   \n",
      "                                                                 \n",
      " block4_conv2 (Conv2D)       (None, None, None, 512)   2359808   \n",
      "                                                                 \n",
      " block4_conv3 (Conv2D)       (None, None, None, 512)   2359808   \n",
      "                                                                 \n",
      " block4_pool (MaxPooling2D)  (None, None, None, 512)   0         \n",
      "                                                                 \n",
      " block5_conv1 (Conv2D)       (None, None, None, 512)   2359808   \n",
      "                                                                 \n",
      " block5_conv2 (Conv2D)       (None, None, None, 512)   2359808   \n",
      "                                                                 \n",
      " block5_conv3 (Conv2D)       (None, None, None, 512)   2359808   \n",
      "                                                                 \n",
      " block5_pool (MaxPooling2D)  (None, None, None, 512)   0         \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 14714688 (56.13 MB)\n",
      "Trainable params: 0 (0.00 Byte)\n",
      "Non-trainable params: 14714688 (56.13 MB)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "vgg_conv.trainable = False\n",
    "vgg_conv.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "58adb2bc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_3\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " vgg16 (Functional)          (None, None, None, 512)   14714688  \n",
      "                                                                 \n",
      " global_average_pooling2d_3  (None, 512)               0         \n",
      "  (GlobalAveragePooling2D)                                       \n",
      "                                                                 \n",
      " dense_9 (Dense)             (None, 256)               131328    \n",
      "                                                                 \n",
      " dropout_6 (Dropout)         (None, 256)               0         \n",
      "                                                                 \n",
      " dense_10 (Dense)            (None, 128)               32896     \n",
      "                                                                 \n",
      " dropout_7 (Dropout)         (None, 128)               0         \n",
      "                                                                 \n",
      " dense_11 (Dense)            (None, 1)                 129       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 14879041 (56.76 MB)\n",
      "Trainable params: 164353 (642.00 KB)\n",
      "Non-trainable params: 14714688 (56.13 MB)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "vgg_model = Sequential()\n",
    "\n",
    "vgg_model.add(vgg_conv)\n",
    "\n",
    "vgg_model.add(GlobalAveragePooling2D())\n",
    "vgg_model.add(Dense(256, activation = 'relu'))\n",
    "vgg_model.add(Dropout(0.2))\n",
    "vgg_model.add(Dense(128, activation = 'relu'))\n",
    "vgg_model.add(Dropout(0.2))\n",
    "vgg_model.add(Dense(1, activation = 'sigmoid'))\n",
    "\n",
    "vgg_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "dfb62f1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "vgg_model.compile(optimizer = tf.keras.optimizers.legacy.Adam(learning_rate=0.00002),\n",
    "                  loss=tf.losses.BinaryCrossentropy(),\n",
    "                  metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "d037a1c5",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/5\n",
      "31/31 [==============================] - 45s 1s/step - loss: 0.1191 - accuracy: 0.9604 - val_loss: 0.1173 - val_accuracy: 0.9589\n",
      "Epoch 2/5\n",
      "31/31 [==============================] - 45s 1s/step - loss: 0.1178 - accuracy: 0.9599 - val_loss: 0.1178 - val_accuracy: 0.9616\n",
      "Epoch 3/5\n",
      "31/31 [==============================] - 45s 1s/step - loss: 0.1167 - accuracy: 0.9599 - val_loss: 0.1167 - val_accuracy: 0.9562\n",
      "Epoch 4/5\n",
      "31/31 [==============================] - 45s 1s/step - loss: 0.1141 - accuracy: 0.9615 - val_loss: 0.1170 - val_accuracy: 0.9589\n",
      "Epoch 5/5\n",
      "31/31 [==============================] - 45s 1s/step - loss: 0.1148 - accuracy: 0.9609 - val_loss: 0.1162 - val_accuracy: 0.9562\n"
     ]
    }
   ],
   "source": [
    "history_vgg = vgg_model.fit(train, epochs=5, validation_data=dev, callbacks=[tensorboard_callback, earlystop_callback])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a183e8d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "loss_acc_fig(history_vgg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "770a5b73",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 1s 584ms/step\n",
      "2/2 [==============================] - 1s 600ms/step\n",
      "tf.Tensor(0.95384616, shape=(), dtype=float32) tf.Tensor(1.0, shape=(), dtype=float32) tf.Tensor(0.97540987, shape=(), dtype=float32)\n"
     ]
    }
   ],
   "source": [
    "ppv_tpr_acc_test(vgg_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "549c5d5f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2/2 [==============================] - 1s 595ms/step\n",
      "2/2 [==============================] - 1s 564ms/step\n",
      "[[57  3]\n",
      " [ 0 62]]\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "confusion_mat(vgg_model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9bbcd4a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "mobnet_model.save(os.path.join('models','MobNet_model.h5'))\n",
    "resnet_model.save(os.path.join('models','ResNet_model.h5'))\n",
    "incept_model.save(os.path.join('models','Inception_model.h5'))\n",
    "vgg_model.save(os.path.join('models', 'VGG_model.h5'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7711b0c8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
